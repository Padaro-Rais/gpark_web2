/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import { BaseCdsDirective } from '../../cds-base';
export class CdsTagDirective extends BaseCdsDirective {
    get status() {
        return this.element['status'];
    }
    set status(value) {
        this.element['status'] = value;
    }
    get color() {
        return this.element['color'];
    }
    set color(value) {
        this.element['color'] = value;
    }
    get closable() {
        return this.element['closable'];
    }
    set closable(value) {
        if (value === '') {
            this.element['closable'] = true;
            return;
        }
        this.element['closable'] = value;
    }
    get readonly() {
        return this.element['readonly'];
    }
    set readonly(value) {
        if (value === '') {
            this.element['readonly'] = true;
            return;
        }
        this.element['readonly'] = value;
    }
    get type() {
        return this.element['type'];
    }
    set type(value) {
        this.element['type'] = value;
    }
    get name() {
        return this.element['name'];
    }
    set name(value) {
        this.element['name'] = value;
    }
    get value() {
        return this.element['value'];
    }
    set value(value) {
        this.element['value'] = value;
    }
    get disabled() {
        return this.element['disabled'];
    }
    set disabled(value) {
        if (value === '') {
            this.element['disabled'] = true;
            return;
        }
        this.element['disabled'] = value;
    }
    get ariaDisabled() {
        return this.element['ariaDisabled'];
    }
    set ariaDisabled(value) {
        this.element['ariaDisabled'] = value;
    }
}
CdsTagDirective.decorators = [
    { type: Directive, args: [{ selector: 'cds-tag' },] }
];
CdsTagDirective.propDecorators = {
    status: [{ type: Input }],
    color: [{ type: Input }],
    closable: [{ type: Input }],
    readonly: [{ type: Input }],
    type: [{ type: Input }],
    name: [{ type: Input }],
    value: [{ type: Input }],
    disabled: [{ type: Input }],
    ariaDisabled: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLXRhZy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jZHMtYW5ndWxhci9zcmMvY2RzL2NvbXBvbmVudHMvdGFnL2Nkcy10YWcuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUdsRCxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxnQkFBZ0I7SUFDbkQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFDRCxJQUFhLE1BQU0sQ0FBQyxLQUFVO1FBQzVCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ2pDLENBQUM7SUFDRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUNELElBQWEsS0FBSyxDQUFDLEtBQVU7UUFDM0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDaEMsQ0FBQztJQUNELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBQ0QsSUFBYSxRQUFRLENBQUMsS0FBVTtRQUM5QixJQUFJLEtBQUssS0FBSyxFQUFFLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDaEMsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbkMsQ0FBQztJQUNELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBQ0QsSUFBYSxRQUFRLENBQUMsS0FBVTtRQUM5QixJQUFJLEtBQUssS0FBSyxFQUFFLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDaEMsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbkMsQ0FBQztJQUNELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBQ0QsSUFBYSxJQUFJLENBQUMsS0FBVTtRQUMxQixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUMvQixDQUFDO0lBQ0QsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFDRCxJQUFhLElBQUksQ0FBQyxLQUFVO1FBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQy9CLENBQUM7SUFDRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUNELElBQWEsS0FBSyxDQUFDLEtBQVU7UUFDM0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDaEMsQ0FBQztJQUNELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBQ0QsSUFBYSxRQUFRLENBQUMsS0FBVTtRQUM5QixJQUFJLEtBQUssS0FBSyxFQUFFLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDaEMsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbkMsQ0FBQztJQUNELElBQUksWUFBWTtRQUNkLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBQ0QsSUFBYSxZQUFZLENBQUMsS0FBVTtRQUNsQyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUN2QyxDQUFDOzs7WUFuRUYsU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRTs7O3FCQUsvQixLQUFLO29CQU1MLEtBQUs7dUJBTUwsS0FBSzt1QkFVTCxLQUFLO21CQVVMLEtBQUs7bUJBTUwsS0FBSztvQkFNTCxLQUFLO3VCQU1MLEtBQUs7MkJBVUwsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyMCBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cblxuaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZUNkc0RpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL2Nkcy1iYXNlJztcblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnY2RzLXRhZycgfSlcbmV4cG9ydCBjbGFzcyBDZHNUYWdEaXJlY3RpdmUgZXh0ZW5kcyBCYXNlQ2RzRGlyZWN0aXZlIHtcbiAgZ2V0IHN0YXR1cygpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydzdGF0dXMnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgc3RhdHVzKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ3N0YXR1cyddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IGNvbG9yKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ2NvbG9yJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGNvbG9yKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ2NvbG9yJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgY2xvc2FibGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnY2xvc2FibGUnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgY2xvc2FibGUodmFsdWU6IGFueSkge1xuICAgIGlmICh2YWx1ZSA9PT0gJycpIHtcbiAgICAgIHRoaXMuZWxlbWVudFsnY2xvc2FibGUnXSA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZWxlbWVudFsnY2xvc2FibGUnXSA9IHZhbHVlO1xuICB9XG4gIGdldCByZWFkb25seSgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydyZWFkb25seSddO1xuICB9XG4gIEBJbnB1dCgpIHNldCByZWFkb25seSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgdGhpcy5lbGVtZW50WydyZWFkb25seSddID0gdHJ1ZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5lbGVtZW50WydyZWFkb25seSddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IHR5cGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsndHlwZSddO1xuICB9XG4gIEBJbnB1dCgpIHNldCB0eXBlKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ3R5cGUnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBuYW1lKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ25hbWUnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgbmFtZSh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WyduYW1lJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgdmFsdWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsndmFsdWUnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgdmFsdWUodmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsndmFsdWUnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBkaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydkaXNhYmxlZCddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBkaXNhYmxlZCh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgdGhpcy5lbGVtZW50WydkaXNhYmxlZCddID0gdHJ1ZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5lbGVtZW50WydkaXNhYmxlZCddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IGFyaWFEaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydhcmlhRGlzYWJsZWQnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgYXJpYURpc2FibGVkKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ2FyaWFEaXNhYmxlZCddID0gdmFsdWU7XG4gIH1cbn1cbiJdfQ==