/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import { BaseCdsDirective } from '../../cds-base';
export class CdsNavigationStartDirective extends BaseCdsDirective {
    get i18n() {
        return this.element['i18n'];
    }
    set i18n(value) {
        this.element['i18n'] = value;
    }
    get expandedRoot() {
        return this.element['expandedRoot'];
    }
    set expandedRoot(value) {
        if (value === '') {
            this.element['expandedRoot'] = true;
            return;
        }
        this.element['expandedRoot'] = value;
    }
    get hasFocus() {
        return this.element['hasFocus'];
    }
    set hasFocus(value) {
        this.element['hasFocus'] = value;
    }
    get isGroupStart() {
        return this.element['isGroupStart'];
    }
    set isGroupStart(value) {
        if (value === '') {
            this.element['isGroupStart'] = true;
            return;
        }
        this.element['isGroupStart'] = value;
    }
    get role() {
        return this.element['role'];
    }
    set role(value) {
        this.element['role'] = value;
    }
    get navigationGroupId() {
        return this.element['navigationGroupId'];
    }
    set navigationGroupId(value) {
        this.element['navigationGroupId'] = value;
    }
    get itemText() {
        return this.element['itemText'];
    }
    set itemText(value) {
        this.element['itemText'] = value;
    }
    get toggleIconDirection() {
        return this.element['toggleIconDirection'];
    }
    set toggleIconDirection(value) {
        this.element['toggleIconDirection'] = value;
    }
}
CdsNavigationStartDirective.decorators = [
    { type: Directive, args: [{ selector: 'cds-navigation-start' },] }
];
CdsNavigationStartDirective.propDecorators = {
    i18n: [{ type: Input }],
    expandedRoot: [{ type: Input }],
    hasFocus: [{ type: Input }],
    isGroupStart: [{ type: Input }],
    role: [{ type: Input }],
    navigationGroupId: [{ type: Input }],
    itemText: [{ type: Input }],
    toggleIconDirection: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLW5hdmlnYXRpb24tc3RhcnQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RzLWFuZ3VsYXIvc3JjL2Nkcy9jb21wb25lbnRzL25hdmlnYXRpb24vY2RzLW5hdmlnYXRpb24tc3RhcnQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUdsRCxNQUFNLE9BQU8sMkJBQTRCLFNBQVEsZ0JBQWdCO0lBQy9ELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBQ0QsSUFBYSxJQUFJLENBQUMsS0FBVTtRQUMxQixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUMvQixDQUFDO0lBQ0QsSUFBSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFDRCxJQUFhLFlBQVksQ0FBQyxLQUFVO1FBQ2xDLElBQUksS0FBSyxLQUFLLEVBQUUsRUFBRTtZQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxHQUFHLElBQUksQ0FBQztZQUNwQyxPQUFPO1NBQ1I7UUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUN2QyxDQUFDO0lBQ0QsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFDRCxJQUFhLFFBQVEsQ0FBQyxLQUFVO1FBQzlCLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ25DLENBQUM7SUFDRCxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUNELElBQWEsWUFBWSxDQUFDLEtBQVU7UUFDbEMsSUFBSSxLQUFLLEtBQUssRUFBRSxFQUFFO1lBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ3BDLE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ3ZDLENBQUM7SUFDRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUNELElBQWEsSUFBSSxDQUFDLEtBQVU7UUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDL0IsQ0FBQztJQUNELElBQUksaUJBQWlCO1FBQ25CLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFDRCxJQUFhLGlCQUFpQixDQUFDLEtBQVU7UUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUM1QyxDQUFDO0lBQ0QsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFDRCxJQUFhLFFBQVEsQ0FBQyxLQUFVO1FBQzlCLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ25DLENBQUM7SUFDRCxJQUFJLG1CQUFtQjtRQUNyQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBQ0QsSUFBYSxtQkFBbUIsQ0FBQyxLQUFVO1FBQ3pDLElBQUksQ0FBQyxPQUFPLENBQUMscUJBQXFCLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDOUMsQ0FBQzs7O1lBekRGLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxzQkFBc0IsRUFBRTs7O21CQUs1QyxLQUFLOzJCQU1MLEtBQUs7dUJBVUwsS0FBSzsyQkFNTCxLQUFLO21CQVVMLEtBQUs7Z0NBTUwsS0FBSzt1QkFNTCxLQUFLO2tDQU1MLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VDZHNEaXJlY3RpdmUgfSBmcm9tICcuLi8uLi9jZHMtYmFzZSc7XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ2Nkcy1uYXZpZ2F0aW9uLXN0YXJ0JyB9KVxuZXhwb3J0IGNsYXNzIENkc05hdmlnYXRpb25TdGFydERpcmVjdGl2ZSBleHRlbmRzIEJhc2VDZHNEaXJlY3RpdmUge1xuICBnZXQgaTE4bigpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydpMThuJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGkxOG4odmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnaTE4biddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IGV4cGFuZGVkUm9vdCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydleHBhbmRlZFJvb3QnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgZXhwYW5kZWRSb290KHZhbHVlOiBhbnkpIHtcbiAgICBpZiAodmFsdWUgPT09ICcnKSB7XG4gICAgICB0aGlzLmVsZW1lbnRbJ2V4cGFuZGVkUm9vdCddID0gdHJ1ZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5lbGVtZW50WydleHBhbmRlZFJvb3QnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBoYXNGb2N1cygpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydoYXNGb2N1cyddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBoYXNGb2N1cyh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydoYXNGb2N1cyddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IGlzR3JvdXBTdGFydCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50Wydpc0dyb3VwU3RhcnQnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgaXNHcm91cFN0YXJ0KHZhbHVlOiBhbnkpIHtcbiAgICBpZiAodmFsdWUgPT09ICcnKSB7XG4gICAgICB0aGlzLmVsZW1lbnRbJ2lzR3JvdXBTdGFydCddID0gdHJ1ZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5lbGVtZW50Wydpc0dyb3VwU3RhcnQnXSA9IHZhbHVlO1xuICB9XG4gIGdldCByb2xlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ3JvbGUnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgcm9sZSh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50Wydyb2xlJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgbmF2aWdhdGlvbkdyb3VwSWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnbmF2aWdhdGlvbkdyb3VwSWQnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgbmF2aWdhdGlvbkdyb3VwSWQodmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnbmF2aWdhdGlvbkdyb3VwSWQnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBpdGVtVGV4dCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydpdGVtVGV4dCddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBpdGVtVGV4dCh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydpdGVtVGV4dCddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IHRvZ2dsZUljb25EaXJlY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsndG9nZ2xlSWNvbkRpcmVjdGlvbiddO1xuICB9XG4gIEBJbnB1dCgpIHNldCB0b2dnbGVJY29uRGlyZWN0aW9uKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ3RvZ2dsZUljb25EaXJlY3Rpb24nXSA9IHZhbHVlO1xuICB9XG59XG4iXX0=