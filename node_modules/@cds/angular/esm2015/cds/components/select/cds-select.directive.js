/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import { BaseCdsDirective } from '../../cds-base';
export class CdsSelectDirective extends BaseCdsDirective {
    constructor() {
        super(...arguments);
        this.layoutChange = new EventEmitter();
    }
    get status() {
        return this.element['status'];
    }
    set status(value) {
        this.element['status'] = value;
    }
    get controlWidth() {
        return this.element['controlWidth'];
    }
    set controlWidth(value) {
        this.element['controlWidth'] = value;
    }
    get validate() {
        return this.element['validate'];
    }
    set validate(value) {
        if (value === '') {
            this.element['validate'] = true;
            return;
        }
        this.element['validate'] = value;
    }
    get responsive() {
        return this.element['responsive'];
    }
    set responsive(value) {
        if (value === '') {
            this.element['responsive'] = true;
            return;
        }
        this.element['responsive'] = value;
    }
    get layout() {
        return this.element['layout'];
    }
    set layout(value) {
        this.element['layout'] = value;
    }
    get layoutStable() {
        return this.element['layoutStable'];
    }
    set layoutStable(value) {
        if (value === '') {
            this.element['layoutStable'] = true;
            return;
        }
        this.element['layoutStable'] = value;
    }
}
CdsSelectDirective.decorators = [
    { type: Directive, args: [{ selector: 'cds-select' },] }
];
CdsSelectDirective.propDecorators = {
    status: [{ type: Input }],
    controlWidth: [{ type: Input }],
    validate: [{ type: Input }],
    responsive: [{ type: Input }],
    layout: [{ type: Input }],
    layoutStable: [{ type: Input }],
    layoutChange: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLXNlbGVjdC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jZHMtYW5ndWxhci9zcmMvY2RzL2NvbXBvbmVudHMvc2VsZWN0L2Nkcy1zZWxlY3QuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR2xELE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxnQkFBZ0I7SUFEeEQ7O1FBbURZLGlCQUFZLEdBQThCLElBQUksWUFBWSxFQUFFLENBQUM7SUFDekUsQ0FBQztJQWxEQyxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUNELElBQWEsTUFBTSxDQUFDLEtBQVU7UUFDNUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDakMsQ0FBQztJQUNELElBQUksWUFBWTtRQUNkLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBQ0QsSUFBYSxZQUFZLENBQUMsS0FBVTtRQUNsQyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUN2QyxDQUFDO0lBQ0QsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFDRCxJQUFhLFFBQVEsQ0FBQyxLQUFVO1FBQzlCLElBQUksS0FBSyxLQUFLLEVBQUUsRUFBRTtZQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxHQUFHLElBQUksQ0FBQztZQUNoQyxPQUFPO1NBQ1I7UUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNuQyxDQUFDO0lBQ0QsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFDRCxJQUFhLFVBQVUsQ0FBQyxLQUFVO1FBQ2hDLElBQUksS0FBSyxLQUFLLEVBQUUsRUFBRTtZQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxHQUFHLElBQUksQ0FBQztZQUNsQyxPQUFPO1NBQ1I7UUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNyQyxDQUFDO0lBQ0QsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFDRCxJQUFhLE1BQU0sQ0FBQyxLQUFVO1FBQzVCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ2pDLENBQUM7SUFDRCxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUNELElBQWEsWUFBWSxDQUFDLEtBQVU7UUFDbEMsSUFBSSxLQUFLLEtBQUssRUFBRSxFQUFFO1lBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ3BDLE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ3ZDLENBQUM7OztZQWpERixTQUFTLFNBQUMsRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFOzs7cUJBS2xDLEtBQUs7MkJBTUwsS0FBSzt1QkFNTCxLQUFLO3lCQVVMLEtBQUs7cUJBVUwsS0FBSzsyQkFNTCxLQUFLOzJCQVFMLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlQ2RzRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vY2RzLWJhc2UnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdjZHMtc2VsZWN0JyB9KVxuZXhwb3J0IGNsYXNzIENkc1NlbGVjdERpcmVjdGl2ZSBleHRlbmRzIEJhc2VDZHNEaXJlY3RpdmUge1xuICBnZXQgc3RhdHVzKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ3N0YXR1cyddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBzdGF0dXModmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnc3RhdHVzJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgY29udHJvbFdpZHRoKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ2NvbnRyb2xXaWR0aCddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBjb250cm9sV2lkdGgodmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnY29udHJvbFdpZHRoJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgdmFsaWRhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsndmFsaWRhdGUnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgdmFsaWRhdGUodmFsdWU6IGFueSkge1xuICAgIGlmICh2YWx1ZSA9PT0gJycpIHtcbiAgICAgIHRoaXMuZWxlbWVudFsndmFsaWRhdGUnXSA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZWxlbWVudFsndmFsaWRhdGUnXSA9IHZhbHVlO1xuICB9XG4gIGdldCByZXNwb25zaXZlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ3Jlc3BvbnNpdmUnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgcmVzcG9uc2l2ZSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgdGhpcy5lbGVtZW50WydyZXNwb25zaXZlJ10gPSB0cnVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmVsZW1lbnRbJ3Jlc3BvbnNpdmUnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBsYXlvdXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnbGF5b3V0J107XG4gIH1cbiAgQElucHV0KCkgc2V0IGxheW91dCh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydsYXlvdXQnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBsYXlvdXRTdGFibGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnbGF5b3V0U3RhYmxlJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGxheW91dFN0YWJsZSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgdGhpcy5lbGVtZW50WydsYXlvdXRTdGFibGUnXSA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZWxlbWVudFsnbGF5b3V0U3RhYmxlJ10gPSB2YWx1ZTtcbiAgfVxuXG4gIEBPdXRwdXQoKSBsYXlvdXRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxDdXN0b21FdmVudD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG59XG4iXX0=