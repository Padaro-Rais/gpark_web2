/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import { BaseCdsDirective } from '../../cds-base';
export class CdsTreeItemDirective extends BaseCdsDirective {
    constructor() {
        super(...arguments);
        this.cdsMotionChange = new EventEmitter();
    }
    get i18n() {
        return this.element['i18n'];
    }
    set i18n(value) {
        this.element['i18n'] = value;
    }
    get role() {
        return this.element['role'];
    }
    set role(value) {
        this.element['role'] = value;
    }
    get cdsMotion() {
        return this.element['cdsMotion'];
    }
    set cdsMotion(value) {
        this.element['cdsMotion'] = value;
    }
    get ariaDisabled() {
        return this.element['ariaDisabled'];
    }
    set ariaDisabled(value) {
        this.element['ariaDisabled'] = value;
    }
    get ariaExpanded() {
        return this.element['ariaExpanded'];
    }
    set ariaExpanded(value) {
        this.element['ariaExpanded'] = value;
    }
    get ariaSelected() {
        return this.element['ariaSelected'];
    }
    set ariaSelected(value) {
        this.element['ariaSelected'] = value;
    }
    get multiSelect() {
        return this.element['multiSelect'];
    }
    set multiSelect(value) {
        if (value === '') {
            this.element['multiSelect'] = true;
            return;
        }
        this.element['multiSelect'] = value;
    }
    get disabled() {
        return this.element['disabled'];
    }
    set disabled(value) {
        if (value === '') {
            this.element['disabled'] = true;
            return;
        }
        this.element['disabled'] = value;
    }
    get expanded() {
        return this.element['expanded'];
    }
    set expanded(value) {
        if (value === '') {
            this.element['expanded'] = true;
            return;
        }
        this.element['expanded'] = value;
    }
    get expandable() {
        return this.element['expandable'];
    }
    set expandable(value) {
        if (value === '') {
            this.element['expandable'] = true;
            return;
        }
        this.element['expandable'] = value;
    }
    get indeterminate() {
        return this.element['indeterminate'];
    }
    set indeterminate(value) {
        if (value === '') {
            this.element['indeterminate'] = true;
            return;
        }
        this.element['indeterminate'] = value;
    }
    get loading() {
        return this.element['loading'];
    }
    set loading(value) {
        if (value === '') {
            this.element['loading'] = true;
            return;
        }
        this.element['loading'] = value;
    }
    get selected() {
        return this.element['selected'];
    }
    set selected(value) {
        if (value === '') {
            this.element['selected'] = true;
            return;
        }
        this.element['selected'] = value;
    }
}
CdsTreeItemDirective.decorators = [
    { type: Directive, args: [{ selector: 'cds-tree-item' },] }
];
CdsTreeItemDirective.propDecorators = {
    i18n: [{ type: Input }],
    role: [{ type: Input }],
    cdsMotion: [{ type: Input }],
    ariaDisabled: [{ type: Input }],
    ariaExpanded: [{ type: Input }],
    ariaSelected: [{ type: Input }],
    multiSelect: [{ type: Input }],
    disabled: [{ type: Input }],
    expanded: [{ type: Input }],
    expandable: [{ type: Input }],
    indeterminate: [{ type: Input }],
    loading: [{ type: Input }],
    selected: [{ type: Input }],
    cdsMotionChange: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,