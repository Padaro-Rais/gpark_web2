/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import { BaseCdsDirective } from '../../cds-base';
export class CdsAccordionPanelDirective extends BaseCdsDirective {
    constructor() {
        super(...arguments);
        this.cdsMotionChange = new EventEmitter();
    }
    get cdsMotion() {
        return this.element['cdsMotion'];
    }
    set cdsMotion(value) {
        this.element['cdsMotion'] = value;
    }
    get disabled() {
        return this.element['disabled'];
    }
    set disabled(value) {
        if (value === '') {
            this.element['disabled'] = true;
            return;
        }
        this.element['disabled'] = value;
    }
    get expanded() {
        return this.element['expanded'];
    }
    set expanded(value) {
        if (value === '') {
            this.element['expanded'] = true;
            return;
        }
        this.element['expanded'] = value;
    }
}
CdsAccordionPanelDirective.decorators = [
    { type: Directive, args: [{ selector: 'cds-accordion-panel' },] }
];
CdsAccordionPanelDirective.propDecorators = {
    cdsMotion: [{ type: Input }],
    disabled: [{ type: Input }],
    expanded: [{ type: Input }],
    cdsMotionChange: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWFjY29yZGlvbi1wYW5lbC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jZHMtYW5ndWxhci9zcmMvY2RzL2NvbXBvbmVudHMvYWNjb3JkaW9uL2Nkcy1hY2NvcmRpb24tcGFuZWwuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR2xELE1BQU0sT0FBTywwQkFBMkIsU0FBUSxnQkFBZ0I7SUFEaEU7O1FBNkJZLG9CQUFlLEdBQThCLElBQUksWUFBWSxFQUFFLENBQUM7SUFDNUUsQ0FBQztJQTVCQyxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUNELElBQWEsU0FBUyxDQUFDLEtBQVU7UUFDL0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDcEMsQ0FBQztJQUNELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBQ0QsSUFBYSxRQUFRLENBQUMsS0FBVTtRQUM5QixJQUFJLEtBQUssS0FBSyxFQUFFLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDaEMsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbkMsQ0FBQztJQUNELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBQ0QsSUFBYSxRQUFRLENBQUMsS0FBVTtRQUM5QixJQUFJLEtBQUssS0FBSyxFQUFFLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDaEMsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbkMsQ0FBQzs7O1lBM0JGLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxxQkFBcUIsRUFBRTs7O3dCQUszQyxLQUFLO3VCQU1MLEtBQUs7dUJBVUwsS0FBSzs4QkFRTCxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZUNkc0RpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL2Nkcy1iYXNlJztcblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnY2RzLWFjY29yZGlvbi1wYW5lbCcgfSlcbmV4cG9ydCBjbGFzcyBDZHNBY2NvcmRpb25QYW5lbERpcmVjdGl2ZSBleHRlbmRzIEJhc2VDZHNEaXJlY3RpdmUge1xuICBnZXQgY2RzTW90aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ2Nkc01vdGlvbiddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBjZHNNb3Rpb24odmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnY2RzTW90aW9uJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnZGlzYWJsZWQnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgZGlzYWJsZWQodmFsdWU6IGFueSkge1xuICAgIGlmICh2YWx1ZSA9PT0gJycpIHtcbiAgICAgIHRoaXMuZWxlbWVudFsnZGlzYWJsZWQnXSA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZWxlbWVudFsnZGlzYWJsZWQnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBleHBhbmRlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydleHBhbmRlZCddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBleHBhbmRlZCh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgdGhpcy5lbGVtZW50WydleHBhbmRlZCddID0gdHJ1ZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5lbGVtZW50WydleHBhbmRlZCddID0gdmFsdWU7XG4gIH1cblxuICBAT3V0cHV0KCkgY2RzTW90aW9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Q3VzdG9tRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xufVxuIl19