/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import { BaseCdsDirective } from '../../cds-base';
export class CdsModalDirective extends BaseCdsDirective {
    constructor() {
        super(...arguments);
        this.cdsMotionChange = new EventEmitter();
    }
    get i18n() {
        return this.element['i18n'];
    }
    set i18n(value) {
        this.element['i18n'] = value;
    }
    get closable() {
        return this.element['closable'];
    }
    set closable(value) {
        if (value === '') {
            this.element['closable'] = true;
            return;
        }
        this.element['closable'] = value;
    }
    get size() {
        return this.element['size'];
    }
    set size(value) {
        this.element['size'] = value;
    }
    get cdsMotion() {
        return this.element['cdsMotion'];
    }
    set cdsMotion(value) {
        this.element['cdsMotion'] = value;
    }
    get ariaModal() {
        return this.element['ariaModal'];
    }
    set ariaModal(value) {
        this.element['ariaModal'] = value;
    }
    get role() {
        return this.element['role'];
    }
    set role(value) {
        this.element['role'] = value;
    }
    get shadowRootOptions() {
        return this.element['shadowRootOptions'];
    }
    set shadowRootOptions(value) {
        this.element['shadowRootOptions'] = value;
    }
    get focusTrap() {
        return this.element['focusTrap'];
    }
    set focusTrap(value) {
        this.element['focusTrap'] = value;
    }
    get topReboundElement() {
        return this.element['topReboundElement'];
    }
    set topReboundElement(value) {
        this.element['topReboundElement'] = value;
    }
    get bottomReboundElement() {
        return this.element['bottomReboundElement'];
    }
    set bottomReboundElement(value) {
        this.element['bottomReboundElement'] = value;
    }
    get hidden() {
        return this.element['hidden'];
    }
    set hidden(value) {
        if (value === '') {
            this.element['hidden'] = true;
            return;
        }
        this.element['hidden'] = value;
    }
    get focusTrapId() {
        return this.element['focusTrapId'];
    }
    set focusTrapId(value) {
        this.element['focusTrapId'] = value;
    }
}
CdsModalDirective.decorators = [
    { type: Directive, args: [{ selector: 'cds-modal' },] }
];
CdsModalDirective.propDecorators = {
    i18n: [{ type: Input }],
    closable: [{ type: Input }],
    size: [{ type: Input }],
    cdsMotion: [{ type: Input }],
    ariaModal: [{ type: Input }],
    role: [{ type: Input }],
    shadowRootOptions: [{ type: Input }],
    focusTrap: [{ type: Input }],
    topReboundElement: [{ type: Input }],
    bottomReboundElement: [{ type: Input }],
    hidden: [{ type: Input }],
    focusTrapId: [{ type: Input }],
    cdsMotionChange: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLW1vZGFsLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Nkcy1hbmd1bGFyL3NyYy9jZHMvY29tcG9uZW50cy9tb2RhbC9jZHMtbW9kYWwuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR2xELE1BQU0sT0FBTyxpQkFBa0IsU0FBUSxnQkFBZ0I7SUFEdkQ7O1FBbUZZLG9CQUFlLEdBQThCLElBQUksWUFBWSxFQUFFLENBQUM7SUFDNUUsQ0FBQztJQWxGQyxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUNELElBQWEsSUFBSSxDQUFDLEtBQVU7UUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDL0IsQ0FBQztJQUNELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBQ0QsSUFBYSxRQUFRLENBQUMsS0FBVTtRQUM5QixJQUFJLEtBQUssS0FBSyxFQUFFLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDaEMsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbkMsQ0FBQztJQUNELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBQ0QsSUFBYSxJ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OEJBSUwsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyMCBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cblxuaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VDZHNEaXJlY3RpdmUgfSBmcm9tICcuLi8uLi9jZHMtYmFzZSc7XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ2Nkcy1tb2RhbCcgfSlcbmV4cG9ydCBjbGFzcyBDZHNNb2RhbERpcmVjdGl2ZSBleHRlbmRzIEJhc2VDZHNEaXJlY3RpdmUge1xuICBnZXQgaTE4bigpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydpMThuJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGkxOG4odmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnaTE4biddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IGNsb3NhYmxlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ2Nsb3NhYmxlJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGNsb3NhYmxlKHZhbHVlOiBhbnkpIHtcbiAgICBpZiAodmFsdWUgPT09ICcnKSB7XG4gICAgICB0aGlzLmVsZW1lbnRbJ2Nsb3NhYmxlJ10gPSB0cnVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmVsZW1lbnRbJ2Nsb3NhYmxlJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgc2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydzaXplJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IHNpemUodmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnc2l6ZSddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IGNkc01vdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydjZHNNb3Rpb24nXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgY2RzTW90aW9uKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ2Nkc01vdGlvbiddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IGFyaWFNb2RhbCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydhcmlhTW9kYWwnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgYXJpYU1vZGFsKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ2FyaWFNb2RhbCddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IHJvbGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsncm9sZSddO1xuICB9XG4gIEBJbnB1dCgpIHNldCByb2xlKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ3JvbGUnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBzaGFkb3dSb290T3B0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydzaGFkb3dSb290T3B0aW9ucyddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBzaGFkb3dSb290T3B0aW9ucyh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydzaGFkb3dSb290T3B0aW9ucyddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IGZvY3VzVHJhcCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50Wydmb2N1c1RyYXAnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgZm9jdXNUcmFwKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ2ZvY3VzVHJhcCddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IHRvcFJlYm91bmRFbGVtZW50KCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ3RvcFJlYm91bmRFbGVtZW50J107XG4gIH1cbiAgQElucHV0KCkgc2V0IHRvcFJlYm91bmRFbGVtZW50KHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ3RvcFJlYm91bmRFbGVtZW50J10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgYm90dG9tUmVib3VuZEVsZW1lbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnYm90dG9tUmVib3VuZEVsZW1lbnQnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgYm90dG9tUmVib3VuZEVsZW1lbnQodmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnYm90dG9tUmVib3VuZEVsZW1lbnQnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBoaWRkZW4oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnaGlkZGVuJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGhpZGRlbih2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgdGhpcy5lbGVtZW50WydoaWRkZW4nXSA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZWxlbWVudFsnaGlkZGVuJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgZm9jdXNUcmFwSWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnZm9jdXNUcmFwSWQnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgZm9jdXNUcmFwSWQodmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnZm9jdXNUcmFwSWQnXSA9IHZhbHVlO1xuICB9XG5cbiAgQE91dHB1dCgpIGNkc01vdGlvbkNoYW5nZTogRXZlbnRFbWl0dGVyPEN1c3RvbUV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbn1cbiJdfQ==