/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import { BaseCdsDirective } from '../../cds-base';
export class CdsInternalControlGroupDirective extends BaseCdsDirective {
    get status() {
        return this.element['status'];
    }
    set status(value) {
        this.element['status'] = value;
    }
    get layout() {
        return this.element['layout'];
    }
    set layout(value) {
        this.element['layout'] = value;
    }
    get controlAlign() {
        return this.element['controlAlign'];
    }
    set controlAlign(value) {
        this.element['controlAlign'] = value;
    }
    get disabled() {
        return this.element['disabled'];
    }
    set disabled(value) {
        if (value === '') {
            this.element['disabled'] = true;
            return;
        }
        this.element['disabled'] = value;
    }
    get controlWidth() {
        return this.element['controlWidth'];
    }
    set controlWidth(value) {
        this.element['controlWidth'] = value;
    }
    get responsive() {
        return this.element['responsive'];
    }
    set responsive(value) {
        if (value === '') {
            this.element['responsive'] = true;
            return;
        }
        this.element['responsive'] = value;
    }
    get layoutStable() {
        return this.element['layoutStable'];
    }
    set layoutStable(value) {
        if (value === '') {
            this.element['layoutStable'] = true;
            return;
        }
        this.element['layoutStable'] = value;
    }
}
CdsInternalControlGroupDirective.decorators = [
    { type: Directive, args: [{ selector: 'cds-internal-control-group' },] }
];
CdsInternalControlGroupDirective.propDecorators = {
    status: [{ type: Input }],
    layout: [{ type: Input }],
    controlAlign: [{ type: Input }],
    disabled: [{ type: Input }],
    controlWidth: [{ type: Input }],
    responsive: [{ type: Input }],
    layoutStable: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWludGVybmFsLWNvbnRyb2wtZ3JvdXAuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RzLWFuZ3VsYXIvc3JjL2Nkcy9jb21wb25lbnRzL2Zvcm1zL2Nkcy1pbnRlcm5hbC1jb250cm9sLWdyb3VwLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFHbEQsTUFBTSxPQUFPLGdDQUFpQyxTQUFRLGdCQUFnQjtJQUNwRSxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUNELElBQWEsTUFBTSxDQUFDLEtBQVU7UUFDNUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDakMsQ0FBQztJQUNELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBQ0QsSUFBYSxNQUFNLENBQUMsS0FBVTtRQUM1QixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNqQyxDQUFDO0lBQ0QsSUFBSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFDRCxJQUFhLFlBQVksQ0FBQyxLQUFVO1FBQ2xDLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ3ZDLENBQUM7SUFDRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUNELElBQWEsUUFBUSxDQUFDLEtBQVU7UUFDOUIsSUFBSSxLQUFLLEtBQUssRUFBRSxFQUFFO1lBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ2hDLE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ25DLENBQUM7SUFDRCxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUNELElBQWEsWUFBWSxDQUFDLEtBQVU7UUFDbEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDdkMsQ0FBQztJQUNELElBQUksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBQ0QsSUFBYSxVQUFVLENBQUMsS0FBVTtRQUNoQyxJQUFJLEtBQUssS0FBSyxFQUFFLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDbEMsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDckMsQ0FBQztJQUNELElBQUksWUFBWTtRQUNkLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBQ0QsSUFBYSxZQUFZLENBQUMsS0FBVTtRQUNsQyxJQUFJLEtBQUssS0FBSyxFQUFFLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDcEMsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDdkMsQ0FBQzs7O1lBdkRGLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSw0QkFBNEIsRUFBRTs7O3FCQUtsRCxLQUFLO3FCQU1MLEtBQUs7MkJBTUwsS0FBSzt1QkFNTCxLQUFLOzJCQVVMLEtBQUs7eUJBTUwsS0FBSzsyQkFVTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlQ2RzRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vY2RzLWJhc2UnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdjZHMtaW50ZXJuYWwtY29udHJvbC1ncm91cCcgfSlcbmV4cG9ydCBjbGFzcyBDZHNJbnRlcm5hbENvbnRyb2xHcm91cERpcmVjdGl2ZSBleHRlbmRzIEJhc2VDZHNEaXJlY3RpdmUge1xuICBnZXQgc3RhdHVzKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ3N0YXR1cyddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBzdGF0dXModmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnc3RhdHVzJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgbGF5b3V0KCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ2xheW91dCddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBsYXlvdXQodmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnbGF5b3V0J10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgY29udHJvbEFsaWduKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ2NvbnRyb2xBbGlnbiddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBjb250cm9sQWxpZ24odmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnY29udHJvbEFsaWduJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnZGlzYWJsZWQnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgZGlzYWJsZWQodmFsdWU6IGFueSkge1xuICAgIGlmICh2YWx1ZSA9PT0gJycpIHtcbiAgICAgIHRoaXMuZWxlbWVudFsnZGlzYWJsZWQnXSA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZWxlbWVudFsnZGlzYWJsZWQnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBjb250cm9sV2lkdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnY29udHJvbFdpZHRoJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGNvbnRyb2xXaWR0aCh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50Wydjb250cm9sV2lkdGgnXSA9IHZhbHVlO1xuICB9XG4gIGdldCByZXNwb25zaXZlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ3Jlc3BvbnNpdmUnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgcmVzcG9uc2l2ZSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgdGhpcy5lbGVtZW50WydyZXNwb25zaXZlJ10gPSB0cnVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmVsZW1lbnRbJ3Jlc3BvbnNpdmUnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBsYXlvdXRTdGFibGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnbGF5b3V0U3RhYmxlJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGxheW91dFN0YWJsZSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgdGhpcy5lbGVtZW50WydsYXlvdXRTdGFibGUnXSA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZWxlbWVudFsnbGF5b3V0U3RhYmxlJ10gPSB2YWx1ZTtcbiAgfVxufVxuIl19