/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { CdsControlDirective } from './cds-control.directive';
import { CdsControlActionDirective } from './cds-control-action.directive';
import { CdsInternalControlGroupDirective } from './cds-internal-control-group.directive';
import { CdsInternalControlInlineDirective } from './cds-internal-control-inline.directive';
import { CdsInternalControlLabelDirective } from './cds-internal-control-label.directive';
import { CdsControlMessageDirective } from './cds-control-message.directive';
import { CdsFormGroupDirective } from './cds-form-group.directive';
import '@cds/core/forms/register.js';
export class CdsFormsModule {
}
CdsFormsModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule],
                declarations: [
                    CdsControlDirective,
                    CdsControlActionDirective,
                    CdsInternalControlGroupDirective,
                    CdsInternalControlInlineDirective,
                    CdsInternalControlLabelDirective,
                    CdsControlMessageDirective,
                    CdsFormGroupDirective,
                ],
                exports: [
                    CdsControlDirective,
                    CdsControlActionDirective,
                    CdsInternalControlGroupDirective,
                    CdsInternalControlInlineDirective,
                    CdsInternalControlLabelDirective,
                    CdsControlMessageDirective,
                    CdsFormGroupDirective,
                ],
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWZvcm1zLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Nkcy1hbmd1bGFyL3NyYy9jZHMvY29tcG9uZW50cy9mb3Jtcy9jZHMtZm9ybXMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMxRixPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUM1RixPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMxRixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUVuRSxPQUFPLDZCQUE2QixDQUFDO0FBdUJyQyxNQUFNLE9BQU8sY0FBYzs7O1lBckIxQixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDO2dCQUN2QixZQUFZLEVBQUU7b0JBQ1osbUJBQW1CO29CQUNuQix5QkFBeUI7b0JBQ3pCLGdDQUFnQztvQkFDaEMsaUNBQWlDO29CQUNqQyxnQ0FBZ0M7b0JBQ2hDLDBCQUEwQjtvQkFDMUIscUJBQXFCO2lCQUN0QjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsbUJBQW1CO29CQUNuQix5QkFBeUI7b0JBQ3pCLGdDQUFnQztvQkFDaEMsaUNBQWlDO29CQUNqQyxnQ0FBZ0M7b0JBQ2hDLDBCQUEwQjtvQkFDMUIscUJBQXFCO2lCQUN0QjthQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ2RzQ29udHJvbERpcmVjdGl2ZSB9IGZyb20gJy4vY2RzLWNvbnRyb2wuZGlyZWN0aXZlJztcbmltcG9ydCB7IENkc0NvbnRyb2xBY3Rpb25EaXJlY3RpdmUgfSBmcm9tICcuL2Nkcy1jb250cm9sLWFjdGlvbi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ2RzSW50ZXJuYWxDb250cm9sR3JvdXBEaXJlY3RpdmUgfSBmcm9tICcuL2Nkcy1pbnRlcm5hbC1jb250cm9sLWdyb3VwLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBDZHNJbnRlcm5hbENvbnRyb2xJbmxpbmVEaXJlY3RpdmUgfSBmcm9tICcuL2Nkcy1pbnRlcm5hbC1jb250cm9sLWlubGluZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ2RzSW50ZXJuYWxDb250cm9sTGFiZWxEaXJlY3RpdmUgfSBmcm9tICcuL2Nkcy1pbnRlcm5hbC1jb250cm9sLWxhYmVsLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBDZHNDb250cm9sTWVzc2FnZURpcmVjdGl2ZSB9IGZyb20gJy4vY2RzLWNvbnRyb2wtbWVzc2FnZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ2RzRm9ybUdyb3VwRGlyZWN0aXZlIH0gZnJvbSAnLi9jZHMtZm9ybS1ncm91cC5kaXJlY3RpdmUnO1xuXG5pbXBvcnQgJ0BjZHMvY29yZS9mb3Jtcy9yZWdpc3Rlci5qcyc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBDZHNDb250cm9sRGlyZWN0aXZlLFxuICAgIENkc0NvbnRyb2xBY3Rpb25EaXJlY3RpdmUsXG4gICAgQ2RzSW50ZXJuYWxDb250cm9sR3JvdXBEaXJlY3RpdmUsXG4gICAgQ2RzSW50ZXJuYWxDb250cm9sSW5saW5lRGlyZWN0aXZlLFxuICAgIENkc0ludGVybmFsQ29udHJvbExhYmVsRGlyZWN0aXZlLFxuICAgIENkc0NvbnRyb2xNZXNzYWdlRGlyZWN0aXZlLFxuICAgIENkc0Zvcm1Hcm91cERpcmVjdGl2ZSxcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIENkc0NvbnRyb2xEaXJlY3RpdmUsXG4gICAgQ2RzQ29udHJvbEFjdGlvbkRpcmVjdGl2ZSxcbiAgICBDZHNJbnRlcm5hbENvbnRyb2xHcm91cERpcmVjdGl2ZSxcbiAgICBDZHNJbnRlcm5hbENvbnRyb2xJbmxpbmVEaXJlY3RpdmUsXG4gICAgQ2RzSW50ZXJuYWxDb250cm9sTGFiZWxEaXJlY3RpdmUsXG4gICAgQ2RzQ29udHJvbE1lc3NhZ2VEaXJlY3RpdmUsXG4gICAgQ2RzRm9ybUdyb3VwRGlyZWN0aXZlLFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBDZHNGb3Jtc01vZHVsZSB7fVxuIl19