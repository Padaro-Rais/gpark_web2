/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import { BaseCdsDirective } from '../../cds-base';
export class CdsIconButtonDirective extends BaseCdsDirective {
    get ariaLabel() {
        return this.element['ariaLabel'];
    }
    set ariaLabel(value) {
        this.element['ariaLabel'] = value;
    }
    get action() {
        return this.element['action'];
    }
    set action(value) {
        this.element['action'] = value;
    }
    get status() {
        return this.element['status'];
    }
    set status(value) {
        this.element['status'] = value;
    }
    get size() {
        return this.element['size'];
    }
    set size(value) {
        this.element['size'] = value;
    }
    get block() {
        return this.element['block'];
    }
    set block(value) {
        if (value === '') {
            this.element['block'] = true;
            return;
        }
        this.element['block'] = value;
    }
    get loadingState() {
        return this.element['loadingState'];
    }
    set loadingState(value) {
        this.element['loadingState'] = value;
    }
    get readonly() {
        return this.element['readonly'];
    }
    set readonly(value) {
        if (value === '') {
            this.element['readonly'] = true;
            return;
        }
        this.element['readonly'] = value;
    }
    get type() {
        return this.element['type'];
    }
    set type(value) {
        this.element['type'] = value;
    }
    get name() {
        return this.element['name'];
    }
    set name(value) {
        this.element['name'] = value;
    }
    get value() {
        return this.element['value'];
    }
    set value(value) {
        this.element['value'] = value;
    }
    get disabled() {
        return this.element['disabled'];
    }
    set disabled(value) {
        if (value === '') {
            this.element['disabled'] = true;
            return;
        }
        this.element['disabled'] = value;
    }
    get ariaDisabled() {
        return this.element['ariaDisabled'];
    }
    set ariaDisabled(value) {
        this.element['ariaDisabled'] = value;
    }
}
CdsIconButtonDirective.decorators = [
    { type: Directive, args: [{ selector: 'cds-icon-button' },] }
];
CdsIconButtonDirective.propDecorators = {
    ariaLabel: [{ type: Input }],
    action: [{ type: Input }],
    status: [{ type: Input }],
    size: [{ type: Input }],
    block: [{ type: Input }],
    loadingState: [{ type: Input }],
    readonly: [{ type: Input }],
    type: [{ type: Input }],
    name: [{ type: Input }],
    value: [{ type: Input }],
    disabled: [{ type: Input }],
    ariaDisabled: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWljb24tYnV0dG9uLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Nkcy1hbmd1bGFyL3NyYy9jZHMvY29tcG9uZW50cy9idXR0b24vY2RzLWljb24tYnV0dG9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFHbEQsTUFBTSxPQUFPLHNCQUF1QixTQUFRLGdCQUFnQjtJQUMxRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUNELElBQWEsU0FBUyxDQUFDLEtBQVU7UUFDL0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDcEMsQ0FBQztJQUNELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBQ0QsSUFBYSxNQUFNLENBQUMsS0FBVTtRQUM1QixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNqQyxDQUFDO0lBQ0QsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFDRCxJQUFhLE1BQU0sQ0FBQyxLQUFVO1FBQzVCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ2pDLENBQUM7SUFDRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUNELElBQWEsSUFB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QVVMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VDZHNEaXJlY3RpdmUgfSBmcm9tICcuLi8uLi9jZHMtYmFzZSc7XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ2Nkcy1pY29uLWJ1dHRvbicgfSlcbmV4cG9ydCBjbGFzcyBDZHNJY29uQnV0dG9uRGlyZWN0aXZlIGV4dGVuZHMgQmFzZUNkc0RpcmVjdGl2ZSB7XG4gIGdldCBhcmlhTGFiZWwoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnYXJpYUxhYmVsJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGFyaWFMYWJlbCh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydhcmlhTGFiZWwnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBhY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnYWN0aW9uJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGFjdGlvbih2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydhY3Rpb24nXSA9IHZhbHVlO1xuICB9XG4gIGdldCBzdGF0dXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnc3RhdHVzJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IHN0YXR1cyh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydzdGF0dXMnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ3NpemUnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgc2l6ZSh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydzaXplJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgYmxvY2soKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnYmxvY2snXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgYmxvY2sodmFsdWU6IGFueSkge1xuICAgIGlmICh2YWx1ZSA9PT0gJycpIHtcbiAgICAgIHRoaXMuZWxlbWVudFsnYmxvY2snXSA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZWxlbWVudFsnYmxvY2snXSA9IHZhbHVlO1xuICB9XG4gIGdldCBsb2FkaW5nU3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnbG9hZGluZ1N0YXRlJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGxvYWRpbmdTdGF0ZSh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50Wydsb2FkaW5nU3RhdGUnXSA9IHZhbHVlO1xuICB9XG4gIGdldCByZWFkb25seSgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydyZWFkb25seSddO1xuICB9XG4gIEBJbnB1dCgpIHNldCByZWFkb25seSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgdGhpcy5lbGVtZW50WydyZWFkb25seSddID0gdHJ1ZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5lbGVtZW50WydyZWFkb25seSddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IHR5cGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsndHlwZSddO1xuICB9XG4gIEBJbnB1dCgpIHNldCB0eXBlKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ3R5cGUnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBuYW1lKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ25hbWUnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgbmFtZSh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WyduYW1lJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgdmFsdWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsndmFsdWUnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgdmFsdWUodmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsndmFsdWUnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBkaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydkaXNhYmxlZCddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBkaXNhYmxlZCh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgdGhpcy5lbGVtZW50WydkaXNhYmxlZCddID0gdHJ1ZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5lbGVtZW50WydkaXNhYmxlZCddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IGFyaWFEaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydhcmlhRGlzYWJsZWQnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgYXJpYURpc2FibGVkKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ2FyaWFEaXNhYmxlZCddID0gdmFsdWU7XG4gIH1cbn1cbiJdfQ==