/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import { BaseCdsDirective } from '../../cds-base';
export class CdsIconDirective extends BaseCdsDirective {
    get shape() {
        return this.element['shape'];
    }
    set shape(value) {
        this.element['shape'] = value;
    }
    get size() {
        return this.element['size'];
    }
    set size(value) {
        this.element['size'] = value;
    }
    get direction() {
        return this.element['direction'];
    }
    set direction(value) {
        this.element['direction'] = value;
    }
    get flip() {
        return this.element['flip'];
    }
    set flip(value) {
        this.element['flip'] = value;
    }
    get solid() {
        return this.element['solid'];
    }
    set solid(value) {
        if (value === '') {
            this.element['solid'] = true;
            return;
        }
        this.element['solid'] = value;
    }
    get status() {
        return this.element['status'];
    }
    set status(value) {
        this.element['status'] = value;
    }
    get inverse() {
        return this.element['inverse'];
    }
    set inverse(value) {
        if (value === '') {
            this.element['inverse'] = true;
            return;
        }
        this.element['inverse'] = value;
    }
    get badge() {
        return this.element['badge'];
    }
    set badge(value) {
        this.element['badge'] = value;
    }
}
CdsIconDirective.decorators = [
    { type: Directive, args: [{ selector: 'cds-icon' },] }
];
CdsIconDirective.propDecorators = {
    shape: [{ type: Input }],
    size: [{ type: Input }],
    direction: [{ type: Input }],
    flip: [{ type: Input }],
    solid: [{ type: Input }],
    status: [{ type: Input }],
    inverse: [{ type: Input }],
    badge: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWljb24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RzLWFuZ3VsYXIvc3JjL2Nkcy9jb21wb25lbnRzL2ljb24vY2RzLWljb24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUdsRCxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsZ0JBQWdCO0lBQ3BELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBQ0QsSUFBYSxLQUFLLENBQUMsS0FBVTtRQUMzQixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNoQyxDQUFDO0lBQ0QsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFDRCxJQUFhLElBQUksQ0FBQyxLQUFVO1FBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQy9CLENBQUM7SUFDRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUNELElBQWEsU0FBUyxDQUFDLEtBQVU7UUFDL0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDcEMsQ0FBQztJQUNELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBQ0QsSUFBYSxJQUFJLENBQUMsS0FBVTtRQUMxQixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUMvQixDQUFDO0lBQ0QsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFDRCxJQUFhLEtBQUssQ0FBQyxLQUFVO1FBQzNCLElBQUksS0FBSyxLQUFLLEVBQUUsRUFBRTtZQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLElBQUksQ0FBQztZQUM3QixPQUFPO1NBQ1I7UUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNoQyxDQUFDO0lBQ0QsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFDRCxJQUFhLE1BQU0sQ0FBQyxLQUFVO1FBQzVCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ2pDLENBQUM7SUFDRCxJQUFJLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUNELElBQWEsT0FBTyxDQUFDLEtBQVU7UUFDN0IsSUFBSSxLQUFLLEtBQUssRUFBRSxFQUFFO1lBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQy9CLE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ2xDLENBQUM7SUFDRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUNELElBQWEsS0FBSyxDQUFDLEtBQVU7UUFDM0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDaEMsQ0FBQzs7O1lBekRGLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUU7OztvQkFLaEMsS0FBSzttQkFNTCxLQUFLO3dCQU1MLEtBQUs7bUJBTUwsS0FBSztvQkFNTCxLQUFLO3FCQVVMLEtBQUs7c0JBTUwsS0FBSztvQkFVTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlQ2RzRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vY2RzLWJhc2UnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdjZHMtaWNvbicgfSlcbmV4cG9ydCBjbGFzcyBDZHNJY29uRGlyZWN0aXZlIGV4dGVuZHMgQmFzZUNkc0RpcmVjdGl2ZSB7XG4gIGdldCBzaGFwZSgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydzaGFwZSddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBzaGFwZSh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydzaGFwZSddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IHNpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnc2l6ZSddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBzaXplKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ3NpemUnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBkaXJlY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnZGlyZWN0aW9uJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGRpcmVjdGlvbih2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydkaXJlY3Rpb24nXSA9IHZhbHVlO1xuICB9XG4gIGdldCBmbGlwKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ2ZsaXAnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgZmxpcCh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydmbGlwJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgc29saWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnc29saWQnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgc29saWQodmFsdWU6IGFueSkge1xuICAgIGlmICh2YWx1ZSA9PT0gJycpIHtcbiAgICAgIHRoaXMuZWxlbWVudFsnc29saWQnXSA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZWxlbWVudFsnc29saWQnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBzdGF0dXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudFsnc3RhdHVzJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IHN0YXR1cyh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydzdGF0dXMnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBpbnZlcnNlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ2ludmVyc2UnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgaW52ZXJzZSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgdGhpcy5lbGVtZW50WydpbnZlcnNlJ10gPSB0cnVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmVsZW1lbnRbJ2ludmVyc2UnXSA9IHZhbHVlO1xuICB9XG4gIGdldCBiYWRnZSgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydiYWRnZSddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBiYWRnZSh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5lbGVtZW50WydiYWRnZSddID0gdmFsdWU7XG4gIH1cbn1cbiJdfQ==