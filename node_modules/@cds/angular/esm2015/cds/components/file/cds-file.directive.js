/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import { BaseCdsDirective } from '../../cds-base';
export class CdsFileDirective extends BaseCdsDirective {
    constructor() {
        super(...arguments);
        this.layoutChange = new EventEmitter();
    }
    get i18n() {
        return this.element['i18n'];
    }
    set i18n(value) {
        this.element['i18n'] = value;
    }
    get status() {
        return this.element['status'];
    }
    set status(value) {
        this.element['status'] = value;
    }
    get controlWidth() {
        return this.element['controlWidth'];
    }
    set controlWidth(value) {
        this.element['controlWidth'] = value;
    }
    get validate() {
        return this.element['validate'];
    }
    set validate(value) {
        if (value === '') {
            this.element['validate'] = true;
            return;
        }
        this.element['validate'] = value;
    }
    get responsive() {
        return this.element['responsive'];
    }
    set responsive(value) {
        if (value === '') {
            this.element['responsive'] = true;
            return;
        }
        this.element['responsive'] = value;
    }
    get layout() {
        return this.element['layout'];
    }
    set layout(value) {
        this.element['layout'] = value;
    }
    get layoutStable() {
        return this.element['layoutStable'];
    }
    set layoutStable(value) {
        if (value === '') {
            this.element['layoutStable'] = true;
            return;
        }
        this.element['layoutStable'] = value;
    }
}
CdsFileDirective.decorators = [
    { type: Directive, args: [{ selector: 'cds-file' },] }
];
CdsFileDirective.propDecorators = {
    i18n: [{ type: Input }],
    status: [{ type: Input }],
    controlWidth: [{ type: Input }],
    validate: [{ type: Input }],
    responsive: [{ type: Input }],
    layout: [{ type: Input }],
    layoutStable: [{ type: Input }],
    layoutChange: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWZpbGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RzLWFuZ3VsYXIvc3JjL2Nkcy9jb21wb25lbnRzL2ZpbGUvY2RzLWZpbGUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR2xELE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxnQkFBZ0I7SUFEdEQ7O1FBeURZLGlCQUFZLEdBQThCLElBQUksWUFBWSxFQUFFLENBQUM7SUFDekUsQ0FBQztJQXhEQyxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUNELElBQWEsSUFBSSxDQUFDLEtBQVU7UUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDL0IsQ0FBQztJQUNELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBQ0QsSUFBYSxNQUFNLENBQUMsS0FBVTtRQUM1QixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNqQyxDQUFDO0lBQ0QsSUFBSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFDRCxJQUFhLFlBQVksQ0FBQyxLQUFVO1FBQ2xDLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ3ZDLENBQUM7SUFDRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUNELElBQWEsUUFBUSxDQUFDLEtBQVU7UUFDOUIsSUFBSSxLQUFLLEtBQUssRUFBRSxFQUFFO1lBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ2hDLE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ25DLENBQUM7SUFDRCxJQUFJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUNELElBQWEsVUFBVSxDQUFDLEtBQVU7UUFDaEMsSUFBSSxLQUFLLEtBQUssRUFBRSxFQUFFO1lBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ2xDLE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ3JDLENBQUM7SUFDRCxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUNELElBQWEsTUFBTSxDQUFDLEtBQVU7UUFDNUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDakMsQ0FBQztJQUNELElBQUksWUFBWTtRQUNkLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBQ0QsSUFBYSxZQUFZLENBQUMsS0FBVTtRQUNsQyxJQUFJLEtBQUssS0FBSyxFQUFFLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDcEMsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDdkMsQ0FBQzs7O1lBdkRGLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUU7OzttQkFLaEMsS0FBSztxQkFNTCxLQUFLOzJCQU1MLEtBQUs7dUJBTUwsS0FBSzt5QkFVTCxLQUFLO3FCQVVMLEtBQUs7MkJBTUwsS0FBSzsyQkFRTCxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZUNkc0RpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL2Nkcy1iYXNlJztcblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnY2RzLWZpbGUnIH0pXG5leHBvcnQgY2xhc3MgQ2RzRmlsZURpcmVjdGl2ZSBleHRlbmRzIEJhc2VDZHNEaXJlY3RpdmUge1xuICBnZXQgaTE4bigpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydpMThuJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IGkxOG4odmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnaTE4biddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IHN0YXR1cygpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydzdGF0dXMnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgc3RhdHVzKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ3N0YXR1cyddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IGNvbnRyb2xXaWR0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50Wydjb250cm9sV2lkdGgnXTtcbiAgfVxuICBASW5wdXQoKSBzZXQgY29udHJvbFdpZHRoKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLmVsZW1lbnRbJ2NvbnRyb2xXaWR0aCddID0gdmFsdWU7XG4gIH1cbiAgZ2V0IHZhbGlkYXRlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ3ZhbGlkYXRlJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IHZhbGlkYXRlKHZhbHVlOiBhbnkpIHtcbiAgICBpZiAodmFsdWUgPT09ICcnKSB7XG4gICAgICB0aGlzLmVsZW1lbnRbJ3ZhbGlkYXRlJ10gPSB0cnVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmVsZW1lbnRbJ3ZhbGlkYXRlJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgcmVzcG9uc2l2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50WydyZXNwb25zaXZlJ107XG4gIH1cbiAgQElucHV0KCkgc2V0IHJlc3BvbnNpdmUodmFsdWU6IGFueSkge1xuICAgIGlmICh2YWx1ZSA9PT0gJycpIHtcbiAgICAgIHRoaXMuZWxlbWVudFsncmVzcG9uc2l2ZSddID0gdHJ1ZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5lbGVtZW50WydyZXNwb25zaXZlJ10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgbGF5b3V0KCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ2xheW91dCddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBsYXlvdXQodmFsdWU6IGFueSkge1xuICAgIHRoaXMuZWxlbWVudFsnbGF5b3V0J10gPSB2YWx1ZTtcbiAgfVxuICBnZXQgbGF5b3V0U3RhYmxlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRbJ2xheW91dFN0YWJsZSddO1xuICB9XG4gIEBJbnB1dCgpIHNldCBsYXlvdXRTdGFibGUodmFsdWU6IGFueSkge1xuICAgIGlmICh2YWx1ZSA9PT0gJycpIHtcbiAgICAgIHRoaXMuZWxlbWVudFsnbGF5b3V0U3RhYmxlJ10gPSB0cnVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmVsZW1lbnRbJ2xheW91dFN0YWJsZSddID0gdmFsdWU7XG4gIH1cblxuICBAT3V0cHV0KCkgbGF5b3V0Q2hhbmdlOiBFdmVudEVtaXR0ZXI8Q3VzdG9tRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xufVxuIl19