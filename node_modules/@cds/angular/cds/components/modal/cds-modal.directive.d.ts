import { EventEmitter } from '@angular/core';
import { BaseCdsDirective } from '../../cds-base';
import * as ɵngcc0 from '@angular/core';
export declare class CdsModalDirective extends BaseCdsDirective {
    get i18n(): any;
    set i18n(value: any);
    get closable(): any;
    set closable(value: any);
    get size(): any;
    set size(value: any);
    get cdsMotion(): any;
    set cdsMotion(value: any);
    get ariaModal(): any;
    set ariaModal(value: any);
    get role(): any;
    set role(value: any);
    get shadowRootOptions(): any;
    set shadowRootOptions(value: any);
    get focusTrap(): any;
    set focusTrap(value: any);
    get topReboundElement(): any;
    set topReboundElement(value: any);
    get bottomReboundElement(): any;
    set bottomReboundElement(value: any);
    get hidden(): any;
    set hidden(value: any);
    get focusTrapId(): any;
    set focusTrapId(value: any);
    cdsMotionChange: EventEmitter<CustomEvent>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<CdsModalDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<CdsModalDirective, "cds-modal", never, { "i18n": "i18n"; "closable": "closable"; "size": "size"; "cdsMotion": "cdsMotion"; "ariaModal": "ariaModal"; "role": "role"; "shadowRootOptions": "shadowRootOptions"; "focusTrap": "focusTrap"; "topReboundElement": "topReboundElement"; "bottomReboundElement": "bottomReboundElement"; "hidden": "hidden"; "focusTrapId": "focusTrapId"; }, { "cdsMotionChange": "cdsMotionChange"; }, never>;
}

//# sourceMappingURL=cds-modal.directive.d.ts.map