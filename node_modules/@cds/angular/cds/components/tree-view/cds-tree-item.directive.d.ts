import { EventEmitter } from '@angular/core';
import { BaseCdsDirective } from '../../cds-base';
import * as ɵngcc0 from '@angular/core';
export declare class CdsTreeItemDirective extends BaseCdsDirective {
    get i18n(): any;
    set i18n(value: any);
    get role(): any;
    set role(value: any);
    get cdsMotion(): any;
    set cdsMotion(value: any);
    get ariaDisabled(): any;
    set ariaDisabled(value: any);
    get ariaExpanded(): any;
    set ariaExpanded(value: any);
    get ariaSelected(): any;
    set ariaSelected(value: any);
    get multiSelect(): any;
    set multiSelect(value: any);
    get disabled(): any;
    set disabled(value: any);
    get expanded(): any;
    set expanded(value: any);
    get expandable(): any;
    set expandable(value: any);
    get indeterminate(): any;
    set indeterminate(value: any);
    get loading(): any;
    set loading(value: any);
    get selected(): any;
    set selected(value: any);
    cdsMotionChange: EventEmitter<CustomEvent>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<CdsTreeItemDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<CdsTreeItemDirective, "cds-tree-item", never, { "i18n": "i18n"; "role": "role"; "cdsMotion": "cdsMotion"; "ariaDisabled": "ariaDisabled"; "ariaExpanded": "ariaExpanded"; "ariaSelected": "ariaSelected"; "multiSelect": "multiSelect"; "disabled": "disabled"; "expanded": "expanded"; "expandable": "expandable"; "indeterminate": "indeterminate"; "loading": "loading"; "selected": "selected"; }, { "cdsMotionChange": "cdsMotionChange"; }, never>;
}

//# sourceMappingURL=cds-tree-item.directive.d.ts.map