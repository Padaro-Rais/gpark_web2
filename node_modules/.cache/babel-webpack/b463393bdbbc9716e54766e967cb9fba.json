{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Country } from './country.model';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as _ from 'google-libphonenumber';\nimport { PhoneNumberUtils } from './phone-number-utils';\nimport { isDefined } from '../../utils';\nimport { createSubject } from '../../rxjs/helpers';\nimport { takeUntil, tap, distinctUntilChanged } from 'rxjs/operators';\nimport { isEmpty } from 'lodash';\nimport { createStateful } from '../../rxjs/helpers/creator-functions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./intl-tel-input.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@clr/angular\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/cdk/scrolling\";\nimport * as i6 from \"@ngx-translate/core\";\nconst _c0 = [\"phoneControlElement\"];\nconst _c1 = [\"clrDropdown\"];\n\nfunction IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const country_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(3);\n      return ctx_r11.onCountrySelect(country_r10);\n    });\n    i0.ɵɵelementStart(1, \"span\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 17);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const country_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r10.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"+\", country_r10 == null ? null : country_r10.dialCode, \"\");\n  }\n}\n\nfunction IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_4_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const country_r13 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      return ctx_r14.onCountrySelect(country_r13);\n    });\n    i0.ɵɵelementStart(1, \"span\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 17);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const country_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r13 == null ? null : country_r13.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"+\", country_r13 == null ? null : country_r13.dialCode, \"\");\n  }\n}\n\nfunction IntlTelInputComponent_div_0_clr_dropdown_menu_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"clr-dropdown-menu\", 10);\n    i0.ɵɵtemplate(1, IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_1_Template, 5, 2, \"button\", 11);\n    i0.ɵɵelement(2, \"div\", 12);\n    i0.ɵɵelementStart(3, \"cdk-virtual-scroll-viewport\", 13);\n    i0.ɵɵtemplate(4, IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_4_Template, 5, 2, \"button\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.preferredCountriesInDropDown);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r5.allCountries);\n  }\n}\n\nfunction IntlTelInputComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"clr-dropdown\", null, 3);\n    i0.ɵɵelementStart(3, \"button\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵelement(5, \"clr-icon\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, IntlTelInputComponent_div_0_clr_dropdown_menu_6_Template, 5, 2, \"clr-dropdown-menu\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 7, 8);\n    i0.ɵɵlistener(\"keypress\", function IntlTelInputComponent_div_0_Template_input_keypress_7_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.onInputKeyPress($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const state_r3 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", state_r3 == null ? null : state_r3.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" +\", ctx_r0.selectedCountry == null ? null : ctx_r0.selectedCountry.dialCode, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMap(\"effect-24 \" + ctx_r0.controlClass);\n    i0.ɵɵproperty(\"tabIndex\", ctx_r0.tabIndex)(\"formControl\", ctx_r0.phoneControl)(\"placeholder\", ctx_r0.selectedCountry.placeHolder);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"tabIndex\", -1)(\"formControl\", ctx_r0.control);\n  }\n}\n\nfunction IntlTelInputComponent_clr_control_error_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"clr-control-error\", 19);\n    i0.ɵɵelement(1, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"translate\", \"validation.required\");\n  }\n}\n\nconst _c2 = function () {\n  return {\n    value: \"(Ex: 228 90050505)\"\n  };\n};\n\nfunction IntlTelInputComponent_clr_control_error_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"clr-control-error\", 19);\n    i0.ɵɵelement(1, \"span\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"translate\", \"validation.phone\")(\"translateParams\", i0.ɵɵpureFunction0(2, _c2));\n  }\n}\n\nexport class PhoneNumberValidator {\n  // tslint:disable-next-line: typedef\n  static ValidatePhoneNumber(control) {\n    if (control.validator) {\n      const validator = control.validator({});\n\n      if (validator && !validator.required) {\n        return null;\n      }\n    }\n\n    const googlePhonelibInstance = _.PhoneNumberUtil.getInstance();\n\n    try {\n      let threatedInput;\n\n      if (!isDefined(control.value)) {\n        return null;\n      }\n\n      threatedInput = PhoneNumberUtils.sanitize(String(control.value));\n      const phoneNumber = googlePhonelibInstance.parseAndKeepRawInput(threatedInput);\n\n      if (!googlePhonelibInstance.isValidNumber(phoneNumber)) {\n        return {\n          invalidPhoneNumber: true\n        };\n      }\n\n      return null;\n    } catch (e) {\n      return {\n        invalidPhoneNumber: true\n      };\n    }\n  }\n\n}\nexport class IntlTelInputComponent {\n  constructor(intelInputService) {\n    this.intelInputService = intelInputService;\n    this.controlChange = new EventEmitter();\n    this.required = false;\n    this.allowDropdown = true;\n    this.preferredCountries = [];\n    this.allCountries = [];\n    this.preferredCountriesInDropDown = [];\n    this.selectedCountry = new Country();\n    this._destroy$ = createSubject();\n    this._disableState$ = createStateful({\n      disabled: false\n    });\n    this.disableState$ = this._disableState$.pipe(tap(state => {\n      if (state.disabled && this.phoneControl.status.toLowerCase() !== 'disabled') {\n        this.phoneControl.disable({\n          onlySelf: true\n        });\n      }\n\n      if (!state.disabled && this.phoneControl.status.toLowerCase() === 'disabled') {\n        this.phoneControl.enable({\n          onlySelf: true\n        });\n      }\n    }));\n    this.allCountries = this.intelInputService.fetchCountries() ? this.intelInputService.fetchCountries() : [];\n  }\n\n  set disabled(value) {\n    this._disableState$.next({\n      disabled: value || false\n    });\n  }\n\n  ngOnInit() {\n    if (this.preferredCountries.length > 0) {\n      this.preferredCountries.forEach(iso2 => {\n        const preferredCountry = this.allCountries.filter(c => {\n          return c.iso2 === iso2;\n        }); // tslint:disable-next-line:no-unused-expression\n\n        preferredCountry[0] ? this.preferredCountriesInDropDown.push(preferredCountry[0]) : // tslint:disable-next-line:no-unused-expression\n        null;\n      });\n    }\n\n    const isControlDisabled = this.control.status.toLowerCase() === 'disabled';\n\n    this._initializePhoneNumberControl(isControlDisabled);\n\n    if (this.control.status.toLowerCase() === 'disabled') {\n      this._disableState$.next({\n        disabled: true\n      });\n    } // Set the preferred countries\n\n\n    this.phoneControl.valueChanges.pipe(distinctUntilChanged(), takeUntil(this._destroy$)).subscribe(state => {\n      if (isEmpty(state)) {\n        this.control.setErrors({\n          invalidPhoneNumber: null\n        }); // Set the control value to null\n\n        this.control.setValue(null);\n      }\n\n      if (state) {\n        this.setControlValue(this.selectedCountry.dialCode, state);\n      }\n    });\n    this.control.valueChanges.pipe(distinctUntilChanged(), takeUntil(this._destroy$)).subscribe(state => {\n      if (this.control.status.toLowerCase() === 'disabled') {\n        this._disableState$.next({\n          disabled: true\n        });\n      } else {\n        this._disableState$.next({\n          disabled: false\n        });\n      }\n\n      if (isDefined(state)) {\n        this.setPhoneControlValue(state);\n      } else {\n        this.phoneControl.setValue(null);\n      }\n    });\n  }\n\n  onCountrySelect(country) {\n    this.selectedCountry = country;\n    this.setControlValue(country.dialCode, this.phoneControl.value ? this.phoneControl.value : '');\n    this.phoneControlElement.nativeElement.focus();\n  }\n\n  onInputKeyPress(event) {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    const inputChar = String.fromCharCode(event.charCode);\n\n    if (!pattern.test(inputChar)) {\n      event.preventDefault();\n    }\n  }\n\n  _initializePhoneNumberControl(isControlDisabled = false) {\n    this.phoneControl = new FormControl({\n      value: null,\n      disabled: isControlDisabled\n    }); // Set the initial country to show\n\n    if (isDefined(this.control.value)) {\n      this.setPhoneControlValue(this.control.value.toString());\n    } else if (this.initialCountry) {\n      const initCountry = this.allCountries.filter(c => {\n        return c.iso2 === this.initialCountry;\n      });\n      this.selectedCountry = initCountry[0];\n    } else {\n      if (this.preferredCountriesInDropDown.length > 0) {\n        this.selectedCountry = this.preferredCountriesInDropDown[0];\n      } else {\n        this.selectedCountry = this.allCountries[0];\n      }\n    } // Setting validators on a control\n\n\n    const validators = [PhoneNumberValidator.ValidatePhoneNumber];\n\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n\n    this.control.setValidators(validators);\n    this.control.updateValueAndValidity({\n      onlySelf: true\n    });\n  }\n\n  setControlValue(dialCode, phoneNumber) {\n    if (this.control.value === `${dialCode}${phoneNumber}`) {\n      return;\n    }\n\n    this.control.setValue(`${dialCode}${phoneNumber === null || phoneNumber === void 0 ? void 0 : phoneNumber.replace(/[\\s\\t\\/\\+\\-]/g, '')}`);\n  }\n\n  setPhoneControlValue(value) {\n    var _a;\n\n    const controlState = value;\n    const tmpCountryCode = this.intelInputService.getCountryCode(controlState);\n\n    if (tmpCountryCode) {\n      this.selectedCountry = this.allCountries.filter(c => {\n        return c.dialCode === tmpCountryCode.toString();\n      })[0];\n\n      if (this.selectedCountry) {\n        const shortPhoneNumber = String(controlState).substring(this.selectedCountry.dialCode.length);\n        const phoneControlValue = (_a = this.phoneControl.value) === null || _a === void 0 ? void 0 : _a.replace(/[\\s\\t\\/\\+\\-]/g, ''); // Update the phone control value only\n        // if it previous value is not equals to the new value\n\n        if (shortPhoneNumber !== phoneControlValue) {\n          this.phoneControl.setValue(shortPhoneNumber);\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy$.next();\n\n    this.allCountries = [];\n  }\n\n}\n\nIntlTelInputComponent.ɵfac = function IntlTelInputComponent_Factory(t) {\n  return new (t || IntlTelInputComponent)(i0.ɵɵdirectiveInject(i1.IntlTelInputService));\n};\n\nIntlTelInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: IntlTelInputComponent,\n  selectors: [[\"app-intl-tel-input\"]],\n  viewQuery: function IntlTelInputComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.phoneControlElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.clrDropdown = _t.first);\n    }\n  },\n  inputs: {\n    control: \"control\",\n    required: \"required\",\n    allowDropdown: \"allowDropdown\",\n    initialCountry: \"initialCountry\",\n    controlClass: \"controlClass\",\n    preferredCountries: \"preferredCountries\",\n    tabIndex: \"tabIndex\",\n    label: \"label\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    controlChange: \"controlChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([])],\n  decls: 4,\n  vars: 5,\n  consts: [[\"class\", \"intl-tel-input allow-dropdown input-effect\", 4, \"ngIf\"], [\"class\", \"field-has-error\", 4, \"ngIf\"], [1, \"intl-tel-input\", \"allow-dropdown\", \"input-effect\"], [\"clrDropdown\", \"\"], [\"type\", \"button\", \"clrDropdownTrigger\", \"\", 1, \"btn\", \"btn-sm\", \"btn-outline-primary\", 3, \"disabled\"], [\"shape\", \"caret down\"], [\"clrPosition\", \"bottom-left\", \"class\", \"clr-dropdown-menu\", 4, \"clrIfOpen\"], [\"type\", \"tel\", \"autocomplete\", \"off\", 3, \"tabIndex\", \"formControl\", \"placeholder\", \"keypress\"], [\"phoneControlElement\", \"\", \"focusable\", \"\"], [\"type\", \"hidden\", 3, \"tabIndex\", \"formControl\"], [\"clrPosition\", \"bottom-left\", 1, \"clr-dropdown-menu\"], [\"clrDropdownItem\", \"\", \"type\", \"button\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"dropdown-divider\"], [\"itemSize\", \"20\", 1, \"countries-viewport\"], [\"type\", \"button\", \"clrDropdownItem\", \"\", 3, \"click\", 4, \"cdkVirtualFor\", \"cdkVirtualForOf\"], [\"clrDropdownItem\", \"\", \"type\", \"button\", 3, \"click\"], [1, \"country-name\"], [1, \"dial-code\"], [\"type\", \"button\", \"clrDropdownItem\", \"\", 3, \"click\"], [1, \"field-has-error\"], [3, \"translate\"], [3, \"translate\", \"translateParams\"]],\n  template: function IntlTelInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, IntlTelInputComponent_div_0_Template, 11, 9, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, IntlTelInputComponent_clr_control_error_2_Template, 2, 1, \"clr-control-error\", 1);\n      i0.ɵɵtemplate(3, IntlTelInputComponent_clr_control_error_3_Template, 2, 3, \"clr-control-error\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 3, ctx.disableState$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.control.hasError(\"required\") && (ctx.phoneControl.touched || ctx.control.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.control.hasError(\"invalidPhoneNumber\") && (ctx.phoneControl.touched || ctx.control.touched));\n    }\n  },\n  directives: [i2.NgIf, i3.ClrDropdown, i3.ClrDropdownTrigger, i3.ClrIconCustomTag, i3.ClrIfOpen, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlDirective, i3.ClrDropdownMenu, i2.NgForOf, i5.CdkVirtualScrollViewport, i5.CdkFixedSizeVirtualScroll, i5.CdkVirtualForOf, i3.ClrDropdownItem, i3.ClrControlError, i6.TranslateDirective],\n  pipes: [i2.AsyncPipe],\n  styles: [\".required-text[_ngcontent-%COMP%], .field-has-error[_ngcontent-%COMP%]{color:#f13232;line-height:1rem}small.field-has-error[_ngcontent-%COMP%]{display:block}li.country[_ngcontent-%COMP%]:hover{background-color:#0000000d}.dropdown-toggle[_ngcontent-%COMP%]:after{display:none}.intl-tel-input[_ngcontent-%COMP%]{width:100%}.intl-tel-input[_ngcontent-%COMP%]   button.btn[_ngcontent-%COMP%]{background:var(--light-clouds);border:none}.clr-dropdown-menu[_ngcontent-%COMP%]{max-height:300px;width:250px;border:none}span.dial-code[_ngcontent-%COMP%]{color:#bfbfbf}.countries-viewport[_ngcontent-%COMP%]{height:200px;width:auto;overflow-x:hidden}[_ngcontent-%COMP%]:focus{outline:none}\"]\n});","map":{"version":3,"sources":["C:/Users/HK/Desktop/LIK_PROJECT/archiLik/Archive_Lik_Angular/src/app/core/components/intl-tel-input/intl-tel-input.component.ts"],"names":["EventEmitter","Country","FormControl","Validators","_","PhoneNumberUtils","isDefined","createSubject","takeUntil","tap","distinctUntilChanged","isEmpty","createStateful","i0","i1","i2","i3","i4","i5","i6","_c0","_c1","IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_1_Template","rf","ctx","_r12","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_1_Template_button_click_0_listener","restoredCtx","ɵɵrestoreView","country_r10","$implicit","ctx_r11","ɵɵnextContext","onCountrySelect","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵtextInterpolate1","dialCode","IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_4_Template","_r15","IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_4_Template_button_click_0_listener","country_r13","ctx_r14","IntlTelInputComponent_div_0_clr_dropdown_menu_6_Template","ɵɵtemplate","ɵɵelement","ctx_r5","ɵɵproperty","preferredCountriesInDropDown","allCountries","IntlTelInputComponent_div_0_Template","_r17","IntlTelInputComponent_div_0_Template_input_keypress_7_listener","$event","ctx_r16","onInputKeyPress","state_r3","ngIf","ctx_r0","disabled","selectedCountry","ɵɵclassMap","controlClass","tabIndex","phoneControl","placeHolder","control","IntlTelInputComponent_clr_control_error_2_Template","_c2","value","IntlTelInputComponent_clr_control_error_3_Template","ɵɵpureFunction0","PhoneNumberValidator","ValidatePhoneNumber","validator","required","googlePhonelibInstance","PhoneNumberUtil","getInstance","threatedInput","sanitize","String","phoneNumber","parseAndKeepRawInput","isValidNumber","invalidPhoneNumber","e","IntlTelInputComponent","constructor","intelInputService","controlChange","allowDropdown","preferredCountries","_destroy$","_disableState$","disableState$","pipe","state","status","toLowerCase","disable","onlySelf","enable","fetchCountries","next","ngOnInit","length","forEach","iso2","preferredCountry","filter","c","push","isControlDisabled","_initializePhoneNumberControl","valueChanges","subscribe","setErrors","setValue","setControlValue","setPhoneControlValue","country","phoneControlElement","nativeElement","focus","event","pattern","inputChar","fromCharCode","charCode","test","preventDefault","toString","initialCountry","initCountry","validators","setValidators","updateValueAndValidity","replace","_a","controlState","tmpCountryCode","getCountryCode","shortPhoneNumber","substring","phoneControlValue","ngOnDestroy","ɵfac","IntlTelInputComponent_Factory","t","ɵɵdirectiveInject","IntlTelInputService","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","IntlTelInputComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","clrDropdown","inputs","label","outputs","features","ɵɵProvidersFeature","decls","vars","consts","template","IntlTelInputComponent_Template","ɵɵpipe","ɵɵpipeBind1","hasError","touched","directives","NgIf","ClrDropdown","ClrDropdownTrigger","ClrIconCustomTag","ClrIfOpen","DefaultValueAccessor","NgControlStatus","FormControlDirective","ClrDropdownMenu","NgForOf","CdkVirtualScrollViewport","CdkFixedSizeVirtualScroll","CdkVirtualForOf","ClrDropdownItem","ClrControlError","TranslateDirective","pipes","AsyncPipe","styles"],"mappings":"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","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { Country } from './country.model';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport * as _ from 'google-libphonenumber';\r\nimport { PhoneNumberUtils } from './phone-number-utils';\r\nimport { isDefined } from '../../utils';\r\nimport { createSubject } from '../../rxjs/helpers';\r\nimport { takeUntil, tap, distinctUntilChanged } from 'rxjs/operators';\r\nimport { isEmpty } from 'lodash';\r\nimport { createStateful } from '../../rxjs/helpers/creator-functions';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./intl-tel-input.service\";\r\nimport * as i2 from \"@angular/common\";\r\nimport * as i3 from \"@clr/angular\";\r\nimport * as i4 from \"@angular/forms\";\r\nimport * as i5 from \"@angular/cdk/scrolling\";\r\nimport * as i6 from \"@ngx-translate/core\";\r\nconst _c0 = [\"phoneControlElement\"];\r\nconst _c1 = [\"clrDropdown\"];\r\nfunction IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r12 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"button\", 15);\r\n    i0.ɵɵlistener(\"click\", function IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_1_Template_button_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r12); const country_r10 = restoredCtx.$implicit; const ctx_r11 = i0.ɵɵnextContext(3); return ctx_r11.onCountrySelect(country_r10); });\r\n    i0.ɵɵelementStart(1, \"span\", 16);\r\n    i0.ɵɵtext(2);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(3, \"span\", 17);\r\n    i0.ɵɵtext(4);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const country_r10 = ctx.$implicit;\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate(country_r10.name);\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate1(\"+\", country_r10 == null ? null : country_r10.dialCode, \"\");\r\n} }\r\nfunction IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_4_Template(rf, ctx) { if (rf & 1) {\r\n    const _r15 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"button\", 18);\r\n    i0.ɵɵlistener(\"click\", function IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_4_Template_button_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r15); const country_r13 = restoredCtx.$implicit; const ctx_r14 = i0.ɵɵnextContext(3); return ctx_r14.onCountrySelect(country_r13); });\r\n    i0.ɵɵelementStart(1, \"span\", 16);\r\n    i0.ɵɵtext(2);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(3, \"span\", 17);\r\n    i0.ɵɵtext(4);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const country_r13 = ctx.$implicit;\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate(country_r13 == null ? null : country_r13.name);\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate1(\"+\", country_r13 == null ? null : country_r13.dialCode, \"\");\r\n} }\r\nfunction IntlTelInputComponent_div_0_clr_dropdown_menu_6_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"clr-dropdown-menu\", 10);\r\n    i0.ɵɵtemplate(1, IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_1_Template, 5, 2, \"button\", 11);\r\n    i0.ɵɵelement(2, \"div\", 12);\r\n    i0.ɵɵelementStart(3, \"cdk-virtual-scroll-viewport\", 13);\r\n    i0.ɵɵtemplate(4, IntlTelInputComponent_div_0_clr_dropdown_menu_6_button_4_Template, 5, 2, \"button\", 14);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r5 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.preferredCountriesInDropDown);\r\n    i0.ɵɵadvance(3);\r\n    i0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r5.allCountries);\r\n} }\r\nfunction IntlTelInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r17 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"div\", 2);\r\n    i0.ɵɵelementStart(1, \"clr-dropdown\", null, 3);\r\n    i0.ɵɵelementStart(3, \"button\", 4);\r\n    i0.ɵɵtext(4);\r\n    i0.ɵɵelement(5, \"clr-icon\", 5);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵtemplate(6, IntlTelInputComponent_div_0_clr_dropdown_menu_6_Template, 5, 2, \"clr-dropdown-menu\", 6);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(7, \"input\", 7, 8);\r\n    i0.ɵɵlistener(\"keypress\", function IntlTelInputComponent_div_0_Template_input_keypress_7_listener($event) { i0.ɵɵrestoreView(_r17); const ctx_r16 = i0.ɵɵnextContext(); return ctx_r16.onInputKeyPress($event); });\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelement(10, \"input\", 9);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const state_r3 = ctx.ngIf;\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(3);\r\n    i0.ɵɵproperty(\"disabled\", state_r3 == null ? null : state_r3.disabled);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" +\", ctx_r0.selectedCountry == null ? null : ctx_r0.selectedCountry.dialCode, \" \");\r\n    i0.ɵɵadvance(3);\r\n    i0.ɵɵclassMap(\"effect-24 \" + ctx_r0.controlClass);\r\n    i0.ɵɵproperty(\"tabIndex\", ctx_r0.tabIndex)(\"formControl\", ctx_r0.phoneControl)(\"placeholder\", ctx_r0.selectedCountry.placeHolder);\r\n    i0.ɵɵadvance(3);\r\n    i0.ɵɵproperty(\"tabIndex\", -1)(\"formControl\", ctx_r0.control);\r\n} }\r\nfunction IntlTelInputComponent_clr_control_error_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"clr-control-error\", 19);\r\n    i0.ɵɵelement(1, \"span\", 20);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"translate\", \"validation.required\");\r\n} }\r\nconst _c2 = function () { return { value: \"(Ex: 228 90050505)\" }; };\r\nfunction IntlTelInputComponent_clr_control_error_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"clr-control-error\", 19);\r\n    i0.ɵɵelement(1, \"span\", 21);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"translate\", \"validation.phone\")(\"translateParams\", i0.ɵɵpureFunction0(2, _c2));\r\n} }\r\nexport class PhoneNumberValidator {\r\n    // tslint:disable-next-line: typedef\r\n    static ValidatePhoneNumber(control) {\r\n        if (control.validator) {\r\n            const validator = control.validator({});\r\n            if (validator && !validator.required) {\r\n                return null;\r\n            }\r\n        }\r\n        const googlePhonelibInstance = _.PhoneNumberUtil.getInstance();\r\n        try {\r\n            let threatedInput;\r\n            if (!isDefined(control.value)) {\r\n                return null;\r\n            }\r\n            threatedInput = PhoneNumberUtils.sanitize(String(control.value));\r\n            const phoneNumber = googlePhonelibInstance.parseAndKeepRawInput(threatedInput);\r\n            if (!googlePhonelibInstance.isValidNumber(phoneNumber)) {\r\n                return { invalidPhoneNumber: true };\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            return { invalidPhoneNumber: true };\r\n        }\r\n    }\r\n}\r\nexport class IntlTelInputComponent {\r\n    constructor(intelInputService) {\r\n        this.intelInputService = intelInputService;\r\n        this.controlChange = new EventEmitter();\r\n        this.required = false;\r\n        this.allowDropdown = true;\r\n        this.preferredCountries = [];\r\n        this.allCountries = [];\r\n        this.preferredCountriesInDropDown = [];\r\n        this.selectedCountry = new Country();\r\n        this._destroy$ = createSubject();\r\n        this._disableState$ = createStateful({ disabled: false });\r\n        this.disableState$ = this._disableState$.pipe(tap(state => {\r\n            if (state.disabled && (this.phoneControl.status.toLowerCase() !== 'disabled')) {\r\n                this.phoneControl.disable({ onlySelf: true });\r\n            }\r\n            if (!state.disabled && (this.phoneControl.status.toLowerCase() === 'disabled')) {\r\n                this.phoneControl.enable({ onlySelf: true });\r\n            }\r\n        }));\r\n        this.allCountries = this.intelInputService.fetchCountries()\r\n            ? this.intelInputService.fetchCountries()\r\n            : [];\r\n    }\r\n    set disabled(value) {\r\n        this._disableState$.next({ disabled: value || false });\r\n    }\r\n    ngOnInit() {\r\n        if (this.preferredCountries.length > 0) {\r\n            this.preferredCountries.forEach(iso2 => {\r\n                const preferredCountry = this.allCountries.filter(c => {\r\n                    return c.iso2 === iso2;\r\n                });\r\n                // tslint:disable-next-line:no-unused-expression\r\n                preferredCountry[0]\r\n                    ? this.preferredCountriesInDropDown.push(preferredCountry[0])\r\n                    : // tslint:disable-next-line:no-unused-expression\r\n                        null;\r\n            });\r\n        }\r\n        const isControlDisabled = this.control.status.toLowerCase() === 'disabled';\r\n        this._initializePhoneNumberControl(isControlDisabled);\r\n        if (this.control.status.toLowerCase() === 'disabled') {\r\n            this._disableState$.next({ disabled: true });\r\n        }\r\n        // Set the preferred countries\r\n        this.phoneControl.valueChanges\r\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy$))\r\n            .subscribe(state => {\r\n            if (isEmpty(state)) {\r\n                this.control.setErrors({ invalidPhoneNumber: null });\r\n                // Set the control value to null\r\n                this.control.setValue(null);\r\n            }\r\n            if (state) {\r\n                this.setControlValue(this.selectedCountry.dialCode, state);\r\n            }\r\n        });\r\n        this.control.valueChanges\r\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy$))\r\n            .subscribe((state) => {\r\n            if (this.control.status.toLowerCase() === 'disabled') {\r\n                this._disableState$.next({ disabled: true });\r\n            }\r\n            else {\r\n                this._disableState$.next({ disabled: false });\r\n            }\r\n            if (isDefined(state)) {\r\n                this.setPhoneControlValue(state);\r\n            }\r\n            else {\r\n                this.phoneControl.setValue(null);\r\n            }\r\n        });\r\n    }\r\n    onCountrySelect(country) {\r\n        this.selectedCountry = country;\r\n        this.setControlValue(country.dialCode, this.phoneControl.value ? this.phoneControl.value : '');\r\n        this.phoneControlElement.nativeElement.focus();\r\n    }\r\n    onInputKeyPress(event) {\r\n        const pattern = /[0-9\\+\\-\\ ]/;\r\n        const inputChar = String.fromCharCode(event.charCode);\r\n        if (!pattern.test(inputChar)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    _initializePhoneNumberControl(isControlDisabled = false) {\r\n        this.phoneControl = new FormControl({ value: null, disabled: isControlDisabled });\r\n        // Set the initial country to show\r\n        if (isDefined(this.control.value)) {\r\n            this.setPhoneControlValue(this.control.value.toString());\r\n        }\r\n        else if (this.initialCountry) {\r\n            const initCountry = this.allCountries.filter((c) => {\r\n                return c.iso2 === this.initialCountry;\r\n            });\r\n            this.selectedCountry = initCountry[0];\r\n        }\r\n        else {\r\n            if (this.preferredCountriesInDropDown.length > 0) {\r\n                this.selectedCountry = this.preferredCountriesInDropDown[0];\r\n            }\r\n            else {\r\n                this.selectedCountry = this.allCountries[0];\r\n            }\r\n        }\r\n        // Setting validators on a control\r\n        const validators = [\r\n            PhoneNumberValidator.ValidatePhoneNumber\r\n        ];\r\n        if (this.required) {\r\n            validators.push(Validators.required);\r\n        }\r\n        this.control.setValidators(validators);\r\n        this.control.updateValueAndValidity({ onlySelf: true });\r\n    }\r\n    setControlValue(dialCode, phoneNumber) {\r\n        if (this.control.value === `${dialCode}${phoneNumber}`) {\r\n            return;\r\n        }\r\n        this.control.setValue(`${dialCode}${phoneNumber === null || phoneNumber === void 0 ? void 0 : phoneNumber.replace(/[\\s\\t\\/\\+\\-]/g, '')}`);\r\n    }\r\n    setPhoneControlValue(value) {\r\n        var _a;\r\n        const controlState = value;\r\n        const tmpCountryCode = this.intelInputService.getCountryCode(controlState);\r\n        if (tmpCountryCode) {\r\n            this.selectedCountry = this.allCountries.filter((c) => {\r\n                return (c.dialCode ===\r\n                    tmpCountryCode.toString());\r\n            })[0];\r\n            if (this.selectedCountry) {\r\n                const shortPhoneNumber = (String(controlState)).substring(this.selectedCountry.dialCode.length);\r\n                const phoneControlValue = (_a = this.phoneControl.value) === null || _a === void 0 ? void 0 : _a.replace(/[\\s\\t\\/\\+\\-]/g, '');\r\n                // Update the phone control value only\r\n                // if it previous value is not equals to the new value\r\n                if (shortPhoneNumber !== phoneControlValue) {\r\n                    this.phoneControl.setValue(shortPhoneNumber);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroy$.next();\r\n        this.allCountries = [];\r\n    }\r\n}\r\nIntlTelInputComponent.ɵfac = function IntlTelInputComponent_Factory(t) { return new (t || IntlTelInputComponent)(i0.ɵɵdirectiveInject(i1.IntlTelInputService)); };\r\nIntlTelInputComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: IntlTelInputComponent, selectors: [[\"app-intl-tel-input\"]], viewQuery: function IntlTelInputComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0, 7);\r\n        i0.ɵɵviewQuery(_c1, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.phoneControlElement = _t.first);\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.clrDropdown = _t.first);\r\n    } }, inputs: { control: \"control\", required: \"required\", allowDropdown: \"allowDropdown\", initialCountry: \"initialCountry\", controlClass: \"controlClass\", preferredCountries: \"preferredCountries\", tabIndex: \"tabIndex\", label: \"label\", disabled: \"disabled\" }, outputs: { controlChange: \"controlChange\" }, features: [i0.ɵɵProvidersFeature([])], decls: 4, vars: 5, consts: [[\"class\", \"intl-tel-input allow-dropdown input-effect\", 4, \"ngIf\"], [\"class\", \"field-has-error\", 4, \"ngIf\"], [1, \"intl-tel-input\", \"allow-dropdown\", \"input-effect\"], [\"clrDropdown\", \"\"], [\"type\", \"button\", \"clrDropdownTrigger\", \"\", 1, \"btn\", \"btn-sm\", \"btn-outline-primary\", 3, \"disabled\"], [\"shape\", \"caret down\"], [\"clrPosition\", \"bottom-left\", \"class\", \"clr-dropdown-menu\", 4, \"clrIfOpen\"], [\"type\", \"tel\", \"autocomplete\", \"off\", 3, \"tabIndex\", \"formControl\", \"placeholder\", \"keypress\"], [\"phoneControlElement\", \"\", \"focusable\", \"\"], [\"type\", \"hidden\", 3, \"tabIndex\", \"formControl\"], [\"clrPosition\", \"bottom-left\", 1, \"clr-dropdown-menu\"], [\"clrDropdownItem\", \"\", \"type\", \"button\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"dropdown-divider\"], [\"itemSize\", \"20\", 1, \"countries-viewport\"], [\"type\", \"button\", \"clrDropdownItem\", \"\", 3, \"click\", 4, \"cdkVirtualFor\", \"cdkVirtualForOf\"], [\"clrDropdownItem\", \"\", \"type\", \"button\", 3, \"click\"], [1, \"country-name\"], [1, \"dial-code\"], [\"type\", \"button\", \"clrDropdownItem\", \"\", 3, \"click\"], [1, \"field-has-error\"], [3, \"translate\"], [3, \"translate\", \"translateParams\"]], template: function IntlTelInputComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, IntlTelInputComponent_div_0_Template, 11, 9, \"div\", 0);\r\n        i0.ɵɵpipe(1, \"async\");\r\n        i0.ɵɵtemplate(2, IntlTelInputComponent_clr_control_error_2_Template, 2, 1, \"clr-control-error\", 1);\r\n        i0.ɵɵtemplate(3, IntlTelInputComponent_clr_control_error_3_Template, 2, 3, \"clr-control-error\", 1);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 3, ctx.disableState$));\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.control.hasError(\"required\") && (ctx.phoneControl.touched || ctx.control.touched));\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.control.hasError(\"invalidPhoneNumber\") && (ctx.phoneControl.touched || ctx.control.touched));\r\n    } }, directives: [i2.NgIf, i3.ClrDropdown, i3.ClrDropdownTrigger, i3.ClrIconCustomTag, i3.ClrIfOpen, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlDirective, i3.ClrDropdownMenu, i2.NgForOf, i5.CdkVirtualScrollViewport, i5.CdkFixedSizeVirtualScroll, i5.CdkVirtualForOf, i3.ClrDropdownItem, i3.ClrControlError, i6.TranslateDirective], pipes: [i2.AsyncPipe], styles: [\".required-text[_ngcontent-%COMP%], .field-has-error[_ngcontent-%COMP%]{color:#f13232;line-height:1rem}small.field-has-error[_ngcontent-%COMP%]{display:block}li.country[_ngcontent-%COMP%]:hover{background-color:#0000000d}.dropdown-toggle[_ngcontent-%COMP%]:after{display:none}.intl-tel-input[_ngcontent-%COMP%]{width:100%}.intl-tel-input[_ngcontent-%COMP%]   button.btn[_ngcontent-%COMP%]{background:var(--light-clouds);border:none}.clr-dropdown-menu[_ngcontent-%COMP%]{max-height:300px;width:250px;border:none}span.dial-code[_ngcontent-%COMP%]{color:#bfbfbf}.countries-viewport[_ngcontent-%COMP%]{height:200px;width:auto;overflow-x:hidden}[_ngcontent-%COMP%]:focus{outline:none}\"] });\r\n"]},"metadata":{},"sourceType":"module"}