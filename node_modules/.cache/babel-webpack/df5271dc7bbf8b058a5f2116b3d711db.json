{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/HK/Desktop/LIK_PROJECT/archiLik/Archive_Lik_Angular/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; // import modules\n\nimport { FullCalendarModule } from '@fullcalendar/angular';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { NgxChartModule } from 'ngx-chart';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { map } from 'rxjs/operators';\nimport { DropzoneModule, DROPZONE_DICT } from './core/components/dropzone';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpModule } from './core/http';\nimport { parseV3HttpResponse } from './core/http/core/v3/http-response';\nimport { DynamicFormControlModule } from './core/components/dynamic-inputs/angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"@ngx-translate/core\";\nimport * as i3 from \"./core/http/module/http.module\";\nimport * as i4 from \"./core/components/dropzone/dropzone.module\";\nimport * as i5 from \"./core/components/dynamic-inputs/angular/dynamic-form-control.module\";\nFullCalendarModule.registerPlugins([interactionPlugin, dayGridPlugin]); //\n\nexport const DropzoneDictLoader = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (translate) {\n    return yield translate.get(['dictAcceptedFilesLabel', 'dictFallbackMessageLabel', 'dictFileTooBigLabel', 'dictInvalidFileTypeLabel', 'dictCancelUploadLabel', 'dictResponseErrorLabel', 'dictCancelUploadConfirmationLabel', 'dictRemoveFileConfirmationLabel', 'dictRemoveFileLabel', 'dictMaxFilesExceededLabel', 'dictUploadCanceled'], {\n      maxFilesize: '{{maxFilesize}}',\n      filesize: '{{filesize}}'\n    }).pipe(map(translations => ({\n      dictFallbackMessage: translations === null || translations === void 0 ? void 0 : translations.dictFallbackMessageLabel,\n      dictFileTooBig: translations === null || translations === void 0 ? void 0 : translations.dictFileTooBigLabel,\n      dictInvalidFileType: translations === null || translations === void 0 ? void 0 : translations.dictInvalidFileTypeLabel,\n      dictResponseError: translations === null || translations === void 0 ? void 0 : translations.dictResponseErrorLabel,\n      dictCancelUpload: translations === null || translations === void 0 ? void 0 : translations.dictCancelUploadLabel,\n      dictCancelUploadConfirmation: translations === null || translations === void 0 ? void 0 : translations.dictCancelUploadConfirmationLabel,\n      dictRemoveFile: translations === null || translations === void 0 ? void 0 : translations.dictRemoveFileLabel,\n      dictRemoveFileConfirmation: translations === null || translations === void 0 ? void 0 : translations.dictRemoveFileConfirmationLabel,\n      dictMaxFilesExceeded: translations === null || translations === void 0 ? void 0 : translations.dictMaxFilesExceededLabel,\n      dictUploadCanceled: translations === null || translations === void 0 ? void 0 : translations.dictUploadCanceled,\n      dictAcceptedFiles: translations === null || translations === void 0 ? void 0 : translations.dictAcceptedFilesLabel\n    }))).toPromise();\n  });\n\n  return function DropzoneDictLoader(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); //\n\nexport function HttpLoaderFactory(http) {\n  return new TranslateHttpLoader(http);\n} //\n\nexport class AppModule {}\n\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\n\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: DROPZONE_DICT,\n    useFactory: function () {\n      var _ref2 = _asyncToGenerator(function* (translate) {\n        return yield DropzoneDictLoader(translate);\n      });\n\n      return function useFactory(_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    deps: [TranslateService]\n  }],\n  imports: [[BrowserModule, AppRoutingModule, ClarityModule, BrowserAnimationsModule, HttpClientModule, NgSelectModule, FormsModule, ReactiveFormsModule, FullCalendarModule, NgxChartModule, ToastrModule.forRoot(), //iport form\n  TranslateModule.forRoot({\n    loader: {\n      provide: TranslateLoader,\n      useFactory: HttpLoaderFactory,\n      deps: [HttpClient]\n    }\n  }), //\n  HttpModule.forRoot({\n    serverURL: '',\n    requestResponseHandler: parseV3HttpResponse\n  }), //\n  DropzoneModule.forRoot({\n    dropzoneConfig: {\n      url: '',\n      maxFilesize: 10,\n      acceptedFiles: 'image/*',\n      autoProcessQueue: false,\n      uploadMultiple: false,\n      maxFiles: 1,\n      addRemoveLinks: true\n    }\n  }), DynamicFormControlModule.forRoot({\n    serverConfigs: {\n      host: '',\n      controlBindingsPath: 'api/v1/control-bindings'\n    },\n    formsAssets: 'assets/resources/forms.json'\n  })], FullCalendarModule, NgxChartModule, MatDialogModule, MatButtonModule]\n});","map":{"version":3,"sources":["C:/Users/HK/Desktop/LIK_PROJECT/archiLik/Archive_Lik_Angular/src/app/app.module.ts"],"names":["BrowserModule","NgSelectModule","AppRoutingModule","AppComponent","ClarityModule","BrowserAnimationsModule","HttpClient","HttpClientModule","ToastrModule","FormsModule","ReactiveFormsModule","FullCalendarModule","interactionPlugin","dayGridPlugin","NgxChartModule","MatDialogModule","MatButtonModule","TranslateLoader","TranslateModule","TranslateService","map","DropzoneModule","DROPZONE_DICT","TranslateHttpLoader","HttpModule","parseV3HttpResponse","DynamicFormControlModule","i0","i1","i2","i3","i4","i5","registerPlugins","DropzoneDictLoader","translate","get","maxFilesize","filesize","pipe","translations","dictFallbackMessage","dictFallbackMessageLabel","dictFileTooBig","dictFileTooBigLabel","dictInvalidFileType","dictInvalidFileTypeLabel","dictResponseError","dictResponseErrorLabel","dictCancelUpload","dictCancelUploadLabel","dictCancelUploadConfirmation","dictCancelUploadConfirmationLabel","dictRemoveFile","dictRemoveFileLabel","dictRemoveFileConfirmation","dictRemoveFileConfirmationLabel","dictMaxFilesExceeded","dictMaxFilesExceededLabel","dictUploadCanceled","dictAcceptedFiles","dictAcceptedFilesLabel","toPromise","HttpLoaderFactory","http","AppModule","ɵfac","AppModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","bootstrap","ɵinj","ɵɵdefineInjector","providers","provide","useFactory","deps","imports","forRoot","loader","serverURL","requestResponseHandler","dropzoneConfig","url","acceptedFiles","autoProcessQueue","uploadMultiple","maxFiles","addRemoveLinks","serverConfigs","host","controlBindingsPath","formsAssets"],"mappings":";AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,uBAAT,QAAwC,sCAAxC;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,sBAA7C;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,gBAAjD,C,CACA;;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,gBAA3C,QAAoE,qBAApE;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,4BAA9C;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,mBAAT,QAAoC,mCAApC;AACA,SAASC,wBAAT,QAAyC,0CAAzC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,YAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,qBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gCAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,4CAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sEAApB;AACArB,kBAAkB,CAACsB,eAAnB,CAAmC,CAACrB,iBAAD,EAAoBC,aAApB,CAAnC,E,CACA;;AACA,OAAO,MAAMqB,kBAAkB;AAAA,+BAAG,WAAOC,SAAP,EAAqB;AACnD,iBAAaA,SAAS,CACjBC,GADQ,CACJ,CACL,wBADK,EAEL,0BAFK,EAGL,qBAHK,EAIL,0BAJK,EAKL,uBALK,EAML,wBANK,EAOL,mCAPK,EAQL,iCARK,EASL,qBATK,EAUL,2BAVK,EAWL,oBAXK,CADI,EAaV;AACCC,MAAAA,WAAW,EAAE,iBADd;AAECC,MAAAA,QAAQ,EAAE;AAFX,KAbU,EAiBRC,IAjBQ,CAiBHnB,GAAG,CAAEoB,YAAD,KAAmB;AAC7BC,MAAAA,mBAAmB,EAAED,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACE,wBADjE;AAE7BC,MAAAA,cAAc,EAAEH,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACI,mBAF5D;AAG7BC,MAAAA,mBAAmB,EAAEL,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACM,wBAHjE;AAI7BC,MAAAA,iBAAiB,EAAEP,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACQ,sBAJ/D;AAK7BC,MAAAA,gBAAgB,EAAET,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACU,qBAL9D;AAM7BC,MAAAA,4BAA4B,EAAEX,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACY,iCAN1E;AAO7BC,MAAAA,cAAc,EAAEb,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACc,mBAP5D;AAQ7BC,MAAAA,0BAA0B,EAAEf,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACgB,+BARxE;AAS7BC,MAAAA,oBAAoB,EAAEjB,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACkB,yBATlE;AAU7BC,MAAAA,kBAAkB,EAAEnB,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACmB,kBAVhE;AAW7BC,MAAAA,iBAAiB,EAAEpB,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACqB;AAX/D,KAAnB,CAAD,CAjBA,EA8BRC,SA9BQ,EAAb;AA+BH,GAhC8B;;AAAA,kBAAlB5B,kBAAkB;AAAA;AAAA;AAAA,GAAxB,C,CAiCP;;AACA,OAAO,SAAS6B,iBAAT,CAA2BC,IAA3B,EAAiC;AACpC,SAAO,IAAIzC,mBAAJ,CAAwByC,IAAxB,CAAP;AACH,C,CACD;;AACA,OAAO,MAAMC,SAAN,CAAgB;;AAEvBA,SAAS,CAACC,IAAV,GAAiB,SAASC,iBAAT,CAA2BC,CAA3B,EAA8B;AAAE,SAAO,KAAKA,CAAC,IAAIH,SAAV,GAAP;AAAgC,CAAjF;;AACAA,SAAS,CAACI,IAAV,GAAiB,aAAc1C,EAAE,CAAC2C,gBAAH,CAAoB;AAAEC,EAAAA,IAAI,EAAEN,SAAR;AAAmBO,EAAAA,SAAS,EAAE,CAACrE,YAAD;AAA9B,CAApB,CAA/B;AACA8D,SAAS,CAACQ,IAAV,GAAiB,aAAc9C,EAAE,CAAC+C,gBAAH,CAAoB;AAAEC,EAAAA,SAAS,EAAE,CACxD;AACIC,IAAAA,OAAO,EAAEtD,aADb;AAEIuD,IAAAA,UAAU;AAAA,oCAAE,WAAO1C,SAAP,EAAqB;AAC7B,qBAAaD,kBAAkB,CAACC,SAAD,CAA/B;AACH,OAFS;;AAAA;AAAA;AAAA;AAAA,OAFd;AAKI2C,IAAAA,IAAI,EAAE,CAAC3D,gBAAD;AALV,GADwD,CAAb;AAQ5C4D,EAAAA,OAAO,EAAE,CAAC,CACL/E,aADK,EAELE,gBAFK,EAGLE,aAHK,EAILC,uBAJK,EAKLE,gBALK,EAMLN,cANK,EAOLQ,WAPK,EAQLC,mBARK,EASLC,kBATK,EAULG,cAVK,EAWLN,YAAY,CAACwE,OAAb,EAXK,EAYL;AACA9D,EAAAA,eAAe,CAAC8D,OAAhB,CAAwB;AACpBC,IAAAA,MAAM,EAAE;AACJL,MAAAA,OAAO,EAAE3D,eADL;AAEJ4D,MAAAA,UAAU,EAAEd,iBAFR;AAGJe,MAAAA,IAAI,EAAE,CAACxE,UAAD;AAHF;AADY,GAAxB,CAbK,EAoBL;AACAkB,EAAAA,UAAU,CAACwD,OAAX,CAAmB;AACfE,IAAAA,SAAS,EAAE,EADI;AAEfC,IAAAA,sBAAsB,EAAE1D;AAFT,GAAnB,CArBK,EAyBL;AACAJ,EAAAA,cAAc,CAAC2D,OAAf,CAAuB;AACnBI,IAAAA,cAAc,EAAE;AACZC,MAAAA,GAAG,EAAE,EADO;AAEZhD,MAAAA,WAAW,EAAE,EAFD;AAGZiD,MAAAA,aAAa,EAAE,SAHH;AAIZC,MAAAA,gBAAgB,EAAE,KAJN;AAKZC,MAAAA,cAAc,EAAE,KALJ;AAMZC,MAAAA,QAAQ,EAAE,CANE;AAOZC,MAAAA,cAAc,EAAE;AAPJ;AADG,GAAvB,CA1BK,EAqCLhE,wBAAwB,CAACsD,OAAzB,CAAiC;AAC7BW,IAAAA,aAAa,EAAE;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,mBAAmB,EAAE;AAFV,KADc;AAK7BC,IAAAA,WAAW,EAAE;AALgB,GAAjC,CArCK,CAAD,EA4CLnF,kBA5CK,EA6CRG,cA7CQ,EA8CRC,eA9CQ,EA+CRC,eA/CQ;AARmC,CAApB,CAA/B","sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ClarityModule } from '@clr/angular';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n// import modules\r\nimport { FullCalendarModule } from '@fullcalendar/angular';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport { NgxChartModule } from 'ngx-chart';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { TranslateLoader, TranslateModule, TranslateService, } from '@ngx-translate/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { DropzoneModule, DROPZONE_DICT } from './core/components/dropzone';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpModule } from './core/http';\r\nimport { parseV3HttpResponse } from './core/http/core/v3/http-response';\r\nimport { DynamicFormControlModule } from './core/components/dynamic-inputs/angular';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"ngx-toastr\";\r\nimport * as i2 from \"@ngx-translate/core\";\r\nimport * as i3 from \"./core/http/module/http.module\";\r\nimport * as i4 from \"./core/components/dropzone/dropzone.module\";\r\nimport * as i5 from \"./core/components/dynamic-inputs/angular/dynamic-form-control.module\";\r\nFullCalendarModule.registerPlugins([interactionPlugin, dayGridPlugin]);\r\n//\r\nexport const DropzoneDictLoader = async (translate) => {\r\n    return await translate\r\n        .get([\r\n        'dictAcceptedFilesLabel',\r\n        'dictFallbackMessageLabel',\r\n        'dictFileTooBigLabel',\r\n        'dictInvalidFileTypeLabel',\r\n        'dictCancelUploadLabel',\r\n        'dictResponseErrorLabel',\r\n        'dictCancelUploadConfirmationLabel',\r\n        'dictRemoveFileConfirmationLabel',\r\n        'dictRemoveFileLabel',\r\n        'dictMaxFilesExceededLabel',\r\n        'dictUploadCanceled',\r\n    ], {\r\n        maxFilesize: '{{maxFilesize}}',\r\n        filesize: '{{filesize}}',\r\n    })\r\n        .pipe(map((translations) => ({\r\n        dictFallbackMessage: translations === null || translations === void 0 ? void 0 : translations.dictFallbackMessageLabel,\r\n        dictFileTooBig: translations === null || translations === void 0 ? void 0 : translations.dictFileTooBigLabel,\r\n        dictInvalidFileType: translations === null || translations === void 0 ? void 0 : translations.dictInvalidFileTypeLabel,\r\n        dictResponseError: translations === null || translations === void 0 ? void 0 : translations.dictResponseErrorLabel,\r\n        dictCancelUpload: translations === null || translations === void 0 ? void 0 : translations.dictCancelUploadLabel,\r\n        dictCancelUploadConfirmation: translations === null || translations === void 0 ? void 0 : translations.dictCancelUploadConfirmationLabel,\r\n        dictRemoveFile: translations === null || translations === void 0 ? void 0 : translations.dictRemoveFileLabel,\r\n        dictRemoveFileConfirmation: translations === null || translations === void 0 ? void 0 : translations.dictRemoveFileConfirmationLabel,\r\n        dictMaxFilesExceeded: translations === null || translations === void 0 ? void 0 : translations.dictMaxFilesExceededLabel,\r\n        dictUploadCanceled: translations === null || translations === void 0 ? void 0 : translations.dictUploadCanceled,\r\n        dictAcceptedFiles: translations === null || translations === void 0 ? void 0 : translations.dictAcceptedFilesLabel,\r\n    })))\r\n        .toPromise();\r\n};\r\n//\r\nexport function HttpLoaderFactory(http) {\r\n    return new TranslateHttpLoader(http);\r\n}\r\n//\r\nexport class AppModule {\r\n}\r\nAppModule.ɵfac = function AppModule_Factory(t) { return new (t || AppModule)(); };\r\nAppModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: AppModule, bootstrap: [AppComponent] });\r\nAppModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        {\r\n            provide: DROPZONE_DICT,\r\n            useFactory: async (translate) => {\r\n                return await DropzoneDictLoader(translate);\r\n            },\r\n            deps: [TranslateService],\r\n        },\r\n    ], imports: [[\r\n            BrowserModule,\r\n            AppRoutingModule,\r\n            ClarityModule,\r\n            BrowserAnimationsModule,\r\n            HttpClientModule,\r\n            NgSelectModule,\r\n            FormsModule,\r\n            ReactiveFormsModule,\r\n            FullCalendarModule,\r\n            NgxChartModule,\r\n            ToastrModule.forRoot(),\r\n            //iport form\r\n            TranslateModule.forRoot({\r\n                loader: {\r\n                    provide: TranslateLoader,\r\n                    useFactory: HttpLoaderFactory,\r\n                    deps: [HttpClient],\r\n                },\r\n            }),\r\n            //\r\n            HttpModule.forRoot({\r\n                serverURL: '',\r\n                requestResponseHandler: parseV3HttpResponse,\r\n            }),\r\n            //\r\n            DropzoneModule.forRoot({\r\n                dropzoneConfig: {\r\n                    url: '',\r\n                    maxFilesize: 10,\r\n                    acceptedFiles: 'image/*',\r\n                    autoProcessQueue: false,\r\n                    uploadMultiple: false,\r\n                    maxFiles: 1,\r\n                    addRemoveLinks: true,\r\n                },\r\n            }),\r\n            DynamicFormControlModule.forRoot({\r\n                serverConfigs: {\r\n                    host: '',\r\n                    controlBindingsPath: 'api/v1/control-bindings',\r\n                },\r\n                formsAssets: 'assets/resources/forms.json'\r\n            }),\r\n        ], FullCalendarModule,\r\n        NgxChartModule,\r\n        MatDialogModule,\r\n        MatButtonModule] });\r\n"]},"metadata":{},"sourceType":"module"}